<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kooku0.github.io/journal</id>
    <title>Kooku's log Blog</title>
    <updated>2023-10-29T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kooku0.github.io/journal"/>
    <subtitle>Kooku's log Blog</subtitle>
    <icon>https://kooku0.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[2023.10.29]]></title>
        <id>https://kooku0.github.io/journal/2023/10/29/</id>
        <link href="https://kooku0.github.io/journal/2023/10/29/"/>
        <updated>2023-10-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 스마트 팜]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-스마트-팜">0. 스마트 팜<a href="https://kooku0.github.io/journal/2023/10/29/#0-%EC%8A%A4%EB%A7%88%ED%8A%B8-%ED%8C%9C" class="hash-link" aria-label="0. 스마트 팜에 대한 직접 링크" title="0. 스마트 팜에 대한 직접 링크">​</a></h2>
<p>예전에 "타이탄의 도구들"을 읽고 쓴 글을 읽다가. 꿈보다 목표가 중요하다는 글을 다시 읽게 되었다.</p>
<blockquote>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="꿈보다-목표가-중요하다">꿈보다 목표가 중요하다<a href="https://kooku0.github.io/journal/2023/10/29/#%EA%BF%88%EB%B3%B4%EB%8B%A4-%EB%AA%A9%ED%91%9C%EA%B0%80-%EC%A4%91%EC%9A%94%ED%95%98%EB%8B%A4" class="hash-link" aria-label="꿈보다 목표가 중요하다에 대한 직접 링크" title="꿈보다 목표가 중요하다에 대한 직접 링크">​</a></h3>
<p>꿈은 일어나지 않을지도 모르는 일을 그냥 상상하는 것이다. 하지만 목표는 그걸 이루기 위한 구체적인 계획을 세우고 열심히 노력해 마침내 이루는 것이다. 내게 성공의 본보기가 되어주는 사람들은 모두 조직적인 목표를 갖고 이를 달성하기 위한 탁월한 계획을 세우는 사람들이다.</p>
</blockquote>
<p>스마트 팜을 하려고 하는데 꿈만 꾸고 제대로된 목표를 정하지 않았었다. 이제 자잘한 목표를 정해보자. 그리고 하나씩 격파해 나가자.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-목표와-원칙">1. 목표와 원칙<a href="https://kooku0.github.io/journal/2023/10/29/#1-%EB%AA%A9%ED%91%9C%EC%99%80-%EC%9B%90%EC%B9%99" class="hash-link" aria-label="1. 목표와 원칙에 대한 직접 링크" title="1. 목표와 원칙에 대한 직접 링크">​</a></h2>
<ul>
<li><a href="https://youtu.be/6f1ZpifGLsw?si=4WqHRAgha4pyL1-B" target="_blank" rel="noopener noreferrer">진짜 이유가 있어야 좋은 전략이 나옵니다</a></li>
<li><a href="https://youtu.be/RatvKKjpr90?si=vaUMX5HkdAEVh83E" target="_blank" rel="noopener noreferrer">레이달리오의 성공을 위한 원칙</a></li>
</ul>
<p>목요일 아침에 위 영상을 보았고 간단히 정리해봤다.</p>
<blockquote>
<p>원칙은 유사한 상황에서 반복적으로 발생하는 일을 처리하는 현명한 방법이다.</p>
<p>원칙에서 출발한 것이 아니라. 평생의 경험을 통해 원칙을 정하는 것. 대부분 실수를 하고 반성하는 것으로 부터. 내 삶의 원칙은 간단하지만 완벽하지는 않다.
저는 여전히 최선의 결정을 내리기 위해 고군분투하고 여전히 실수를 하고 항상 새로운 원칙을 배웁니다. 이것이 현실입니다.</p>
<p>다른 사람이 지시하는 삶을 살고 싶지 않다면, 스스로 무엇을 해야 할지 결정하고 그것을 할 수 있는 용기를 가질 필요가 있다.</p>
<p>역경은 항상 있고, 매일 결정을 내려야 한다. 움직임을 멈출 수도 없고, 충돌을 피할 수도 없다. 가능한 최선의 방법으로만 접근할 수 있다.
수백만 가지의 결정을 하게 될 것이다.</p>
<p>현실을 받아들이고 그것을 다루는 것에서 시작한다.</p>
<ol>
<li>목표는 명확하게 방법은 유연하게</li>
<li>'목표 계층도' 만들기</li>
<li>거절을 연습하기</li>
<li>남이 꺼리는 일을 기꺼이 하기</li>
<li>사명과 목표, 그리고 전략을 시각화 해라</li>
</ol>
</blockquote>
<p>우리는 일을 하면서 당연히 실패를 맛볼 것이다. 그리고 실패로 부터 배우고 익히며 원칙을 정해 실패를 줄여나가야 한다. 원칙은 완벽하지 않으며 계속 수정해 나가야 한다. 원칙은 경험으로 부터 만들어진다. 우리가 회사에서 팀으로 일할 때 원칙을 정하는게 중요하다는 걸 알 수 있다. 이 원칙은 남이 정하는게 아니라 팀이 그동안의 경험을 바탕으로 정하는게 훨씬 좋을 것 같다는 생각도 있다.</p>
<p>목표는 명확해야하고 유연해야한다. 목표는 하나만 정하는게 아닌 해당 목표를 달성하기 위한 작은 목표들도 같이 만들어 시각화 해야 목표를 달성하기 쉬워진다. 그리고 이 목표와 벗어난 것들은 철저히 배척하고 하지 말아야 한다. 그래야 목표를 달성할 확률이 높아진다.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.10.26]]></title>
        <id>https://kooku0.github.io/journal/2023/10/26/</id>
        <link href="https://kooku0.github.io/journal/2023/10/26/"/>
        <updated>2023-10-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 일상]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-일상">0. 일상<a href="https://kooku0.github.io/journal/2023/10/26/#0-%EC%9D%BC%EC%83%81" class="hash-link" aria-label="0. 일상에 대한 직접 링크" title="0. 일상에 대한 직접 링크">​</a></h2>
<ul>
<li>회사 &amp; 집 하고 있으며 집에 오면 유튜브만 보게 된다.</li>
<li>진짜 도파민을 위한 유튜브를 대부분 보긴하는데 어쩌다 성장에 도움이 되는 영상을 보기도 한다.</li>
<li>내가 좋아하는 채널들을 몇 개 소개하고자 한다.<!-- -->
<ul>
<li><a href="https://www.youtube.com/@B_ZCF" target="_blank" rel="noopener noreferrer">B2CF | 비트카페</a>: 해외 컨퍼런스나 인터뷰를 번역해서 올리는 채널이다.<!-- -->
<ul>
<li>최근에 본 것 중 가장 재미있었던 것: <a href="https://youtu.be/G3z3kbaZvz0?si=xvyPOIERJIUTFjP8" target="_blank" rel="noopener noreferrer">스티브잡스의 의사결정 방법 (직관 vs 데이터)</a></li>
<li>역시 최고는 일론머스크 1: <a href="https://youtu.be/dqQ3E1eu2gY" target="_blank" rel="noopener noreferrer">[일론 머스크] 쉬지 않고 계속해서 부를 축적하는 이유 (한영 자막)</a></li>
<li>역시 최고는 일론머스크 2: <a href="https://youtu.be/Aq2Yov6CIOk" target="_blank" rel="noopener noreferrer">[일론 머스크] 성공한 사람과 실패한 사람의 차이 (한영 자막)</a></li>
</ul>
</li>
<li><a href="https://www.youtube.com/@wkforum" target="_blank" rel="noopener noreferrer">World Knowledge Forum</a>: 세계 지식 포럼에서 진행하는 강연들을 올리는 채널이다.</li>
<li><a href="https://www.youtube.com/@projsnowball" target="_blank" rel="noopener noreferrer">Project스노우볼</a>
<ul>
<li>최근에 본 것 중 가장 재미있었던 것: <a href="https://youtu.be/F56D9FhyRjE?si=tIvoiEsdxZNA7i4x" target="_blank" rel="noopener noreferrer">[일론 머스크] 쉬지 않고 계속해서 부를 축적하는 이유 (한영 자막)</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>적다보니 일론머스크 영상밖에 없네 ㅋㅋㅋ 자극을 받고 싶은가? 그럼 일론머스크의 영상을 봐라</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-회사">1. 회사<a href="https://kooku0.github.io/journal/2023/10/26/#1-%ED%9A%8C%EC%82%AC" class="hash-link" aria-label="1. 회사에 대한 직접 링크" title="1. 회사에 대한 직접 링크">​</a></h2>
<p>팀이 크게 4개로 나눠어져 있어 FE도 4개의 프로젝트를 진행하고 있었고, 최근에 이를 하나의 프로젝트로 만드는 과정을 진행중이라고 이야기 했었다.</p>
<p>지금은 하나의 레포로 옮기는 작업은 끝났고 각 프로젝트들에 퍼져 있는 코드들을 하나로 모으는 작업이 진행중이다. 나의 작업이 여러 프로젝트에 영향이 가서 조심스럽게 천천히 진행중인데 여기에 대한 이야기도 해보고 싶다. (아직 생각 정리중)</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.10.22]]></title>
        <id>https://kooku0.github.io/journal/2023/10/22/</id>
        <link href="https://kooku0.github.io/journal/2023/10/22/"/>
        <updated>2023-10-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 와인]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-와인">0. 와인<a href="https://kooku0.github.io/journal/2023/10/22/#0-%EC%99%80%EC%9D%B8" class="hash-link" aria-label="0. 와인에 대한 직접 링크" title="0. 와인에 대한 직접 링크">​</a></h2>
<ul>
<li>WSET Level 3 는 국비교육이 오픈되지 않아 내년에 신청할 것 같다.</li>
<li>POPO는 4명이 설치했다가 지금은 2명만 설치되어 있다. IOS도 배포를 할지 고민중이다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-스마트-팜">1. 스마트 팜<a href="https://kooku0.github.io/journal/2023/10/22/#1-%EC%8A%A4%EB%A7%88%ED%8A%B8-%ED%8C%9C" class="hash-link" aria-label="1. 스마트 팜에 대한 직접 링크" title="1. 스마트 팜에 대한 직접 링크">​</a></h2>
<ul>
<li><a href="https://www.youtube.com/watch?v=OHFhVfsT_cs" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=OHFhVfsT_cs</a> 영상을 시청했다.</li>
<li>댓글을 보고 흥미로운 정보를 발견했는데, 인공광은 태양광을 대체하지 못한다. 특정 식물이 필요로 하는 스팩트럼만 인공광으로 쏴주면 식물을 키울 수 있다. 하지만, 태양광은 식물이 필요로 하는 스팩트럼을 모두 가지고 있기 때문에 태양광이 더 효율적이다. 인공광은 태양광을 보완하는 역할을 한다. (특정 스팩트럼이 부족할 경우, 인공광으로 보완한다.) 라는 댓글이다.</li>
<li>태양광을 무시하고 실내나 지하에서 스마트팜을 하는 건 매우 비효율적인 방법인 것 같다. 스마트 팜이라도 태양광이 내부로 들어올 수 있어야 하고 스마트팜은 내부로 들어오는 태양광의 양을 조절하고 부족한 빛은 인공광으로 대체하도록 해야한다. 그게 아니면 전기 에너지도 너무 많이 들고, 식물이 필요로 하는 스팩트럼을 모두 제공하지 못한다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-http-status-0">2. HTTP Status 0<a href="https://kooku0.github.io/journal/2023/10/22/#2-http-status-0" class="hash-link" aria-label="2. HTTP Status 0에 대한 직접 링크" title="2. HTTP Status 0에 대한 직접 링크">​</a></h2>
<p>서비스를 운영하면서 http status 0인 케이스가 여러번 있는데 해당 케이스에 대해 조사를 해봤다.</p>
<blockquote>
<p>XMLHttpRequest의 스팩이 httpStatus의 초깃값이 0였다가 서버의 response header로 httpStatus가 업데이트됨. (status === 0로 throw되었다면 "요청에 실패함"으로 생각하면 됨)</p>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="다음-상황에서-발생">다음 상황에서 발생<a href="https://kooku0.github.io/journal/2023/10/22/#%EB%8B%A4%EC%9D%8C-%EC%83%81%ED%99%A9%EC%97%90%EC%84%9C-%EB%B0%9C%EC%83%9D" class="hash-link" aria-label="다음 상황에서 발생에 대한 직접 링크" title="다음 상황에서 발생에 대한 직접 링크">​</a></h3>
<ol>
<li>불법적인 교차 출처 요청( CORS 참조 )</li>
<li>방화벽 차단 또는 필터링</li>
<li>요청 자체가 코드에서 취소되었습니다.</li>
<li>설치된 브라우저 확장 프로그램이 문제를 일으키고 있습니다.
sentry에서 올라온 모든 status 0 에러는 3번 케이스인 "요청 자체가 코드에서 취소된 경우"로 XMLHttpRequest가 요청을 보낼때 request timeout 디폴트 0로 잡고 있는데 이때까지 request를 하지 않으면 status 0로 AxiosError를 throw해버림. (네트워크 연결이 잘 안된경우)</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="reference">Reference<a href="https://kooku0.github.io/journal/2023/10/22/#reference" class="hash-link" aria-label="Reference에 대한 직접 링크" title="Reference에 대한 직접 링크">​</a></h3>
<ul>
<li><a href="https://stackoverflow.com/questions/872206/what-does-it-mean-when-an-http-request-returns-status-code-0" target="_blank" rel="noopener noreferrer">https://stackoverflow.com/questions/872206/what-does-it-mean-when-an-http-request-returns-status-code-0</a></li>
<li><a href="https://fetch.spec.whatwg.org/#concept-network-error" target="_blank" rel="noopener noreferrer">https://fetch.spec.whatwg.org/#concept-network-error</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status</a></li>
</ul>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="3-공부">3. 공부<a href="https://kooku0.github.io/journal/2023/10/22/#3-%EA%B3%B5%EB%B6%80" class="hash-link" aria-label="3. 공부에 대한 직접 링크" title="3. 공부에 대�한 직접 링크">​</a></h2>
<ul>
<li>밋코더 11월 신청을 했다. 공부에 소홀한 나를 이끄는 건 역시나 스터디..! 이번에 공부할 껀 "유닛 테스트" 와 "그릿" 책을 읽어볼 예정이다.</li>
<li>추가로 웹뷰간 통신 or 웹뷰 네이티브 간 통신에 대한 내용, 카드결제에 대한 내용들을 공부하고 정리해 볼 예정이다.</li>
</ul>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.10.18]]></title>
        <id>https://kooku0.github.io/journal/2023/10/18/</id>
        <link href="https://kooku0.github.io/journal/2023/10/18/"/>
        <updated>2023-10-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 와인]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-와인">0. 와인<a href="https://kooku0.github.io/journal/2023/10/18/#0-%EC%99%80%EC%9D%B8" class="hash-link" aria-label="0. 와인에 대한 직접 링크" title="0. 와인에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="와인그래프-티타임">와인그래프 티타임<a href="https://kooku0.github.io/journal/2023/10/18/#%EC%99%80%EC%9D%B8%EA%B7%B8%EB%9E%98%ED%94%84-%ED%8B%B0%ED%83%80%EC%9E%84" class="hash-link" aria-label="와인그래프 티타임에 대한 직접 링크" title="와인그래프 티타임에 대한 직접 링크">​</a></h3>
<p>와인앱을 개발하며 여러 와인앱을 살펴봤는데 국내에서는 와인그래프가 가장 많은 database와 앱 사용성이 좋았다. 와인앱 개발하며 어려웠던 부분들이 많았는데 타 와인앱들은 어떻게 이 문제를 해결했는지, 그리고 있으면 좋을 것 같은 기능들을 왜 구현하지 않았는지? 어떤 제약이 있었는지 궁금하여 와인그래프에 티타임을 요청하여 가졌다.</p>
<p>주요 질문들은 다음과 같았다.</p>
<ul>
<li>web 서비스를 하지않는 이유는</li>
<li>가격정보를 노출하지 않는 이유는</li>
<li>대형마트와의 제휴는 진행중인지</li>
<li>와인 정보를 어떻게 모았는지</li>
<li>BM</li>
</ul>
<p>친절히 답변주셔서 와인시장에 대해 이해를 많이 할 수 있었다.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-멘토링">1. 멘토링<a href="https://kooku0.github.io/journal/2023/10/18/#1-%EB%A9%98%ED%86%A0%EB%A7%81" class="hash-link" aria-label="1. 멘토링에 대한 직접 링크" title="1. 멘토링에 대한 직접 링크">​</a></h2>
<p>어제 멘토링을 진행했는데 음.. 난 역시 누군가를 가르치는데 소질이 없다. 경험이 많이 없어서 그런걸 수도 있다. 다른 사람의 받아들이는 속도에 맞추고, 계획을 짤 때 멘티의 역량과 소화할 수 있는 걸 가정하고 짜야하는 것들.. 내가 처음에 생각한 것에서 계속 엇나가고 방향이 틀어진다. 멘티가 내가 설계한 것에 맞추는 방법과 멘티의 역량에 나의 설계를 계속 조절하면서 진행하는 방법이 있다는 것도 이번에 배웠다. 후자의 경우 나의 에너지가 엄청 소모된다ㅠ</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-스마트-팜">2. 스마트 팜<a href="https://kooku0.github.io/journal/2023/10/18/#2-%EC%8A%A4%EB%A7%88%ED%8A%B8-%ED%8C%9C" class="hash-link" aria-label="2. 스마트 팜에 대한 직접 링크" title="2. 스마트 �팜에 대한 직접 링크">​</a></h2>
<p>예전에 긱뉴스에 올라왔던 글인데 <a href="https://present.do/documents/64aa897810ab9a5ae55bae90?page=1" target="_blank" rel="noopener noreferrer">https://present.do/documents/64aa897810ab9a5ae55bae90?page=1</a> 이걸 다시 봤고, 스마트팜을 하려면 sw, hw, infra, ml 진짜 모든 기술이 다 들어가야 할 것 같았다. 적어도 hw는 당연히 필수. 대학교때 아두이노, 라즈베리파이를 조금 만져봤었는데 다시 그 기억을 꺼내야할 때가 온 것 같다.</p>
<p>아직 개발은 안할꺼고 농사, 식물에 대한 공부를 해볼 생각이다. 이건 이론이 모두 준비된 상태에서 모두 설계를 마친 후 개발을 진행하는게 좋을 것 같다. 그게 아니면 엄청난 고난이 예상된다.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.10.15]]></title>
        <id>https://kooku0.github.io/journal/2023/10/15/</id>
        <link href="https://kooku0.github.io/journal/2023/10/15/"/>
        <updated>2023-10-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 와인]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-와인">0. 와인<a href="https://kooku0.github.io/journal/2023/10/15/#0-%EC%99%80%EC%9D%B8" class="hash-link" aria-label="0. 와인에 대한 직접 링크" title="0. 와인에 대한 직접 링크">​</a></h2>
<p>와인은 이제 내 삶에 큰 부분을 차지하고 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="wset-level-2">WSET Level 2<a href="https://kooku0.github.io/journal/2023/10/15/#wset-level-2" class="hash-link" aria-label="WSET Level 2에 대한 직접 링크" title="WSET Level 2에 대한 직접 링크">​</a></h3>
<p>WSET Level 2 결과가 발표되었다.</p>
<img src="https://kooku0.github.io/assets/images/wset-level2-score-3c903890e3e5da9a0de354e71308c5ff.png" width="300">
<table><thead><tr><th>점수</th><th>항목</th></tr></thead><tbody><tr><td>85% 이상</td><td>Pass with distinction(최우수 합격)</td></tr><tr><td>70% ~ 84%</td><td>Pass with merit(우수 합격)</td></tr><tr><td>55% ~ 69%</td><td>Pass(합격)</td></tr><tr><td>45% ~ 54%</td><td>Fail(불합격)</td></tr><tr><td>44% 이하</td><td>Fail unclassified(불합격 (미 분류 대상))</td></tr></tbody></table>
<p>나는 80으로 Pass with merit를 받았다.</p>
<p>시험 본 후 2등급일 꺼라고 예상했었는데 역시나.. 하지만 공부시간 대비 결과는 만족스럽다. 미리미리 공부 할껄..</p>
<p>Level 3 수강할지 고민이다. 3개월 수강, 200만원 이라는 비싼 수강료가 부담되는데 와인은 계속 접해야만 실력이 늘고, Level 3 부터는 테이스팅 시험도 있어서 더 인정 받는것 같기도 해서다.</p>
<p>추가로 와인모임을 가져볼까도 생각중이다. 와인은 진짜 계속 접해야 실력이 늘고 이론도 안까먹는다.</p>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="와인-앱-출시">와인 앱 출시<a href="https://kooku0.github.io/journal/2023/10/15/#%EC%99%80%EC%9D%B8-%EC%95%B1-%EC%B6%9C%EC%8B%9C" class="hash-link" aria-label="와인 앱 출시에 대한 직접 링크" title="와인 앱 출시에 대한 직접 링크">​</a></h3>
<img src="https://kooku0.github.io/assets/images/popo-playstore-321707ad452bc5464bc93609e3eb3702.png">
<p>드디어 popo가 playstore에 출시되었다. <a href="https://play.google.com/store/apps/details?id=com.kooku.popo" target="_blank" rel="noopener noreferrer">링크</a></p>
<p>다운로드 수가 3명 뿐이지만 많은 사람들이 다운받는게 원하는 바는 아니여서 괜찮다. 혼자서 앱 만들어 출시해보는 경험이 무척이나 재미있었다.</p>
<p>앱 개발하기전 생각했었던 모든 기능들을 구현했고, 실제로 사용해보면서 불편한 점들을 수정하여 나 혼자 사용하기에 충분한 앱이 되었다는 점에서 만족한다.</p>
<p>별일이 없는 한 앱을 더 고도화하거나 추가 개발은 하지 않을 것이고, 예전부터 생각했었던 새로운 프로젝트를 시작해볼까 한다.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-멘토링">1. 멘토링<a href="https://kooku0.github.io/journal/2023/10/15/#1-%EB%A9%98%ED%86%A0%EB%A7%81" class="hash-link" aria-label="1. 멘토링에 대한 직접 링크" title="1. 멘토링에 대한 직접 링크">​</a></h2>
<p>지금 멘토링을 주 1회 1시간 하고 있는데, 괜히 멘토링을 시작한 것 같다. 시간과 에너지를 너무 쏟게 된다. 책임감도 상당해서 부담도 된다. 이걸 마지막으로 멘토링은 끝내야겠다.</p>
<p>나는 누군가를 가르치는데 소질도 없고 원하지도 않는 것 같다.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-새로운-프로젝트">2. 새로운 프로젝트<a href="https://kooku0.github.io/journal/2023/10/15/#2-%EC%83%88%EB%A1%9C%EC%9A%B4-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8" class="hash-link" aria-label="2. 새로운 프로젝트에 대한 직접 링크" title="2. 새로운 프로젝트에 대한 직접 링크">​</a></h2>
<p>새로운 프로젝트를 시작해보려고 한다. 주제는 스마트팜이고 관련된 정보는 아직 없고 의욕만 있는 상태라 조금씩 정보를 모으고 구체화 해나가야 한다. 하루에 한시간씩 매일 시간을 투자할 계획이다.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.10.10]]></title>
        <id>https://kooku0.github.io/journal/2023/10/10/</id>
        <link href="https://kooku0.github.io/journal/2023/10/10/"/>
        <updated>2023-10-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[1. 와인앱 출시]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-와인앱-출시">1. 와인앱 출시<a href="https://kooku0.github.io/journal/2023/10/10/#1-%EC%99%80%EC%9D%B8%EC%95%B1-%EC%B6%9C%EC%8B%9C" class="hash-link" aria-label="1. 와인앱 출시에 대한 직접 링크" title="1. 와인앱 출시에 대한 직접 링크">​</a></h2>
<p>와인 앱을 드디어 playstore에 올렸다. 아직 검토중이라 보이지는 않겠지만, 이건 빠른시일 내에 되겠지..</p>
<p><img loading="lazy" alt="img" src="https://kooku0.github.io/assets/images/popo-dashboard-01-c7816253232789ceee27fb7f2bdf4d95.png" width="2138" height="520" class="img_cI1a"></p>
<p>처음에는 추석 연휴때 올리려고 했으나 부족한 기능들이 생각보다 너무 많았고 배포를 위해 준비해야할 스크린샷등도 필요해서 미룰 수 밖에 없었다 ㅠㅠ</p>
<p>그래도 처음 앱을 기획했을 때의 모든 기능들이 포함되어 있어 만족한다. 처음부터 내가 사용하기 위해 만든 앱이기도 하고 실제 와인 매장에서 사용해 봤을때도 나름 유용했다.</p>
<p>이제는 이 앱을 계속 유지보수하여 다른 사람들도 편리하게 사용하게 만들지 아니면 새로운 프로젝트를 진행할지 고민이다. 와인 서비스의 핵심은 와인정보를 얼마나 자세히 많이 가지고 있느냐의 data 싸움이고 이건 내가 너무 불리하니 이걸 스스로 해결할지 아니면 다른 와인 서비스와 컨택하여 풀어나갈지 고민이 된다. 이게 어렵다면 새로운 프로젝트를 진행해야할 듯 하다. 이미 아이디어도 있고.</p>
<p>(유사 서비스를 탐색하다 와인그래프라는 한국 서비스를 발견했는데 정말 많은 와인정보를 가지고 있어서 놀랐다. 와인그래프와 티타임이라도 해볼까 생각중이다.)</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.09.27]]></title>
        <id>https://kooku0.github.io/journal/2023/09/27/</id>
        <link href="https://kooku0.github.io/journal/2023/09/27/"/>
        <updated>2023-09-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 일상]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-일상">0. 일상<a href="https://kooku0.github.io/journal/2023/09/27/#0-%EC%9D%BC%EC%83%81" class="hash-link" aria-label="0. 일상에 대한 직접 링크" title="0. 일상에 대한 직접 링크">​</a></h2>
<p>오랜만에 글을 쓴다. 글을 써야지 써야지 생각만하고 귀찮아서 미루게 되는데 쓰게 하는 습관을 들이던가 쓰게 만드는 나만의 규칙을 정해야겠다. 글을 쓰면서 나만의 회고도 되고 생각을 정리할 시간을 스스로에게 주는 것 같아서 도움이 된다.</p>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="와인이야기">와인이야기<a href="https://kooku0.github.io/journal/2023/09/27/#%EC%99%80%EC%9D%B8%EC%9D%B4%EC%95%BC%EA%B8%B0" class="hash-link" aria-label="와인이야기에 대한 직접 링크" title="와인이야기에 대한 직접 링크">​</a></h3>
<ul>
<li>와인수업이 끝난지 꽤 되었다. 수업이 끝나고 와인을 마시거나 공부하는 시간을 따로 잡지 못했는데 시간이 지나면 잊혀질 것들이라 자주 와인을 접해보려는 노력을 하려한다. emart 가는 길에 한 병씩 사던가 일정이 없는데 코딩을 하고 싶지 않을 때 예전에 공부했던 책을 꺼내서 읽어보려 한다.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="사이드-프로젝트">사이드 프로젝트<a href="https://kooku0.github.io/journal/2023/09/27/#%EC%82%AC%EC%9D%B4%EB%93%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8" class="hash-link" aria-label="사이드 프로젝트에 대한 직접 링크" title="사이드 프로젝트에 대한 직접 링크">​</a></h3>
<ul>
<li>와인 앱 만드는 사이드는 계속해서 하고 있다. 처음에 와인 데이터들을 firebase에 모두 업로드하고 조회했었는데 (firebase 하루 upload limit가 있어서 몇일에 걸쳐서 업로드 했다 ㅠ) firebase가 부분 문자열 검색이 되지 않아 결국 elasticsearch로 갈아탔다.</li>
<li>elasticsearch를 docker로 띄우고 앞에 node server 띄우는 방식으로 해결했는데 내가 생각한 대로 잘 작동했다. flutter 코드랑 elasticsearch에 bulk로 데이터 넣을때 formatting하는 것까지 모두 chatGPT를 활용해서 진행했고 정말 빠르게 구현했다.</li>
<li>하지만 서버를 띄워야 한다는 부담이 존재하여 server를 사용하지 않고 앱안에 데이터를 저정하고 검색시 앱에 저장된 데이터에서 조회하는 식으로 변경해보려고 한다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-폴더구조-세-번째마지막-논의">1. 폴더구조 세 번째(마지막) 논의<a href="https://kooku0.github.io/journal/2023/09/27/#1-%ED%8F%B4%EB%8D%94%EA%B5%AC%EC%A1%B0-%EC%84%B8-%EB%B2%88%EC%A7%B8%EB%A7%88%EC%A7%80%EB%A7%89-%EB%85%BC%EC%9D%98" class="hash-link" aria-label="1. 폴더구조 세 번째(마지막) 논의에 대한 직접 링크" title="1. 폴더구조 세 번째(마지막) 논의에 대한 직접 링크">​</a></h2>
<p>회사에서 흩어진 프로젝트를 통합하면서 폴더구조를 정하고 있다. 두 번째 논의에서 대부분 다 정했으나 common에 대해 애매한 부분이 있어 내가 세 번째 논의를 발의했고 이 세번째 논의를 마지막으로 폴더구조에 대한 모든 팀원들의 생각을 맞추게 되었다. 앞으로 개발하다 보면 애매한 부분들이 생기고 다시 논의가 필요하겠지만 지금 상황에서 애매한 부분은 대부분 다 정리했다고 생각한다. 적어도 큰틀과 기준을 정했기에 추후에 생길 수 있는 애매한 부분도 많이 없어지지 않을까 생각한다.</p>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="이전-논의">이전 논의<a href="https://kooku0.github.io/journal/2023/09/27/#%EC%9D%B4%EC%A0%84-%EB%85%BC%EC%9D%98" class="hash-link" aria-label="이전 논의에 대한 직접 링크" title="이전 논의에 대한 직접 링크">​</a></h3>
<ol>
<li><a href="https://kooku0.github.io/journal/2023/07/05/">첫 번째 논의</a></li>
<li><a href="https://kooku0.github.io/journal/2023/08/13/">두 번째 논의</a></li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="아젠다">아젠다<a href="https://kooku0.github.io/journal/2023/09/27/#%EC%95%84%EC%A0%A0%EB%8B%A4" class="hash-link" aria-label="아젠다에 대한 직접 링크" title="아젠다에 대한 직접 링크">​</a></h3>
<p>아젠다: 두 번째 논의 후에도 찝찝함이 생기는데, 왜 찝찝함이 생길까? 찝찝함을 찾아서 없애보자!</p>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="1-common에-들어갈-수-있는-것">1. common에 들어갈 수 있는 것<a href="https://kooku0.github.io/journal/2023/09/27/#1-common%EC%97%90-%EB%93%A4%EC%96%B4%EA%B0%88-%EC%88%98-%EC%9E%88%EB%8A%94-%EA%B2%83" class="hash-link" aria-label="1. common에 들어갈 수 있는 것에 대한 직접 링크" title="1. common에 들어갈 수 있는 것에 ��대한 직접 링크">​</a></h3>
<p>코드를 액션과 계산으로 나누고 common에 들어가는건 계산만 넣어보자.</p>
<ul>
<li>순수함수</li>
<li>외부 IO</li>
<li>변하지 않는 것</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="2-common-내-폴더-별-예시">2. common 내 폴더 별 예시<a href="https://kooku0.github.io/journal/2023/09/27/#2-common-%EB%82%B4-%ED%8F%B4%EB%8D%94-%EB%B3%84-%EC%98%88%EC%8B%9C" class="hash-link" aria-label="2. common 내 폴더 별 예시에 대한 직접 링크" title="2. common 내 폴더 별 예시에 대한 직접 링크">​</a></h3>
<ul>
<li>util: 순수함수 (계산), web api</li>
<li>service: bridge 한 번 wrapping 한 것</li>
<li>style: animation</li>
<li>hook: 비즈니스 로직이 포함되어 있지 않은 useBoolean, useIsTopEffect</li>
<li>component: 당근 디자인시스템 공통 컴포넌트 (sprout), sprout에 아직 구현되어 있지 않은 컴포넌트</li>
<li>svg, icon, css animation, calculate util, brand logo, image, etc…</li>
</ul>
<ol start="3">
<li>기타 질문</li>
</ol>
<ul>
<li>production, beta, alpha, userid 같은 것 들도 비즈니스 로직이 아닌가?<!-- -->
<ul>
<li>회사의 정책이고 자주 변하는게 아니기 때문에 common에 개념이 들어가도 되지 않을까?</li>
</ul>
</li>
</ul>
<blockquote>
<p>common과 shared의 구분기준을 비즈니스 로직이냐 아니다도 좋지만 자주 변하는거 변하지 않는거로 생각했어요.</p>
<p>비즈니스 로직이 있으면 자주 변하기 때문에 shared에 들어가게 되고 common에 들어가는 것들은 자주 변하지 않는 것들이 들어가게 되는데 그런 관점에서 바라보면 production, beta, alpha는 거의 변하지 않는 것들이기 때문에 common에 들어가도 괜찮지 않을까 생각했어요.</p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="결론">결론<a href="https://kooku0.github.io/journal/2023/09/27/#%EA%B2%B0%EB%A1%A0" class="hash-link" aria-label="결론에 대한 직접 링크" title="결론에 대한 직접 링크">​</a></h3>
<ul>
<li>common에 들어가는건 side-effect가 없는 로직, 자주 변하지 않는 것들 (비즈니스 로직)</li>
<li>shared에 들어가는건 액션, 자주 변하는 것들(비즈니스 로직)</li>
</ul>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.09.06]]></title>
        <id>https://kooku0.github.io/journal/2023/09/06/</id>
        <link href="https://kooku0.github.io/journal/2023/09/06/"/>
        <updated>2023-09-06T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 와인 마지막 수업]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-와인-마지막-수업">0. 와인 마지막 수업<a href="https://kooku0.github.io/journal/2023/09/06/#0-%EC%99%80%EC%9D%B8-%EB%A7%88%EC%A7%80%EB%A7%89-%EC%88%98%EC%97%85" class="hash-link" aria-label="0. 와인 마지막 수업에 대한 직접 링크" title="0. 와인 마지막 수업에 대한 직접 링크">​</a></h2>
<p>오늘 와인 클래스 마지막 수업을 했다. 총 8회 2달간 매주 1회 수업을 들었는데 드디어 끝 ㅠㅠ 하지만 머릿속에 남는게 많이 없어서 심심할 때 다시 공부는 해야할 듯 하다. 마지막 수업은 맛있는 와인들을 먹었는데 스파클링 와인과 주정강화 와인이다.</p>
<p>세부 종류를 이야기 하자면, 스파클링 와인은 프로세코, 샴페인, 모스카토 디 아스티, 주정강화 와인은 피노 세리, 포트 와인이였다.</p>
<p>누구나 알 와인인 샴페인과 모스카토는 역시나 맛있었다. 특히 샴페인은 확실히 고급진 향과 맛이 났다. 향에서 2차 향이 듬뿍 났다. 수업들으면서 피노 쉐리 향이 독특하다고 해서 맛보고 싶었는데 나는 진짜 불호.. 맡기 힘든 향이 너무 강했고 먹었을 때 무맛인데 향이 덧 씐 느낌? 바디감이 가벼워서 물 같아서 이걸 술로 먹으면 최악이다 싶었다. 포트 와인은 요즘 인기가 많은데 와인 사러가면 포트와인 사러온 사람을 종종 만난다. 하지만 내 스타일은 아니였다. 술에서 시럽같은 단맛이 너무 나면서 알콜을 쎈... 노노~</p>
<p>샴페인 + 모스카토가 최강. 프로세코도 맛있었다. 음식없이 와인만 마실수도 있을 것 같았다. 산도가 딱 내가 좋아하는 정도로 익었었다.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.09.05]]></title>
        <id>https://kooku0.github.io/journal/2023/09/05/</id>
        <link href="https://kooku0.github.io/journal/2023/09/05/"/>
        <updated>2023-09-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[1. 멘토링]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-멘토링">1. 멘토링<a href="https://kooku0.github.io/journal/2023/09/05/#1-%EB%A9%98%ED%86%A0%EB%A7%81" class="hash-link" aria-label="1. 멘토링에 대한 직접 링크" title="1. 멘토링에 대한 직접 링크">​</a></h2>
<p>예전에 멘토링을 하고 이후로 안했었는데 오늘부터 다시 시작했다.</p>
<p>예전에 했었을 때는 돈은 많이 받는데 가르쳐주는게 많이 없다고 느껴서 죄책감이 들었다. 내가 더 노력하고 준비도 더 많이 하면 되겠지만 일을 하고 있는 입장에서 멘토링에 나의 노력과 시간과 열정을 그만큼 쏟기 쉽지 않았던 것 같다.</p>
<p>이번에 시작한 이유는 멘토링을 한 명만 하기도 하고(이전에는 두명이였다) 내가 가지고 있는 생각, 지식들을 이야기해주고 방향만 제대로 알려줘도 좋은 결과를 얻을 수 있을 것 같아서다.</p>
<p>대부분 취준생들이 고민을 가지고 불안감을 가지는게 기업들이 바라는 실력이 어느정도인지, 그리고 나의 실력은 어느정도인지 모르고 js, ts, react 공부는 했는데 이제 어떤걸 공부해야하는지 모르기 때문이라고 생각하는데 솔직히 이런건 취준생들이 가고자 하는 회사에 다니는 사람들에게 조언을 듣는것 만큼 좋은게 없다고 생각한다. (특히나 스타트업에서 구르다가 이직한 사람들에게 더 좋은 조언을 얻을 수 있다.)</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.08.29]]></title>
        <id>https://kooku0.github.io/journal/2023/08/29/</id>
        <link href="https://kooku0.github.io/journal/2023/08/29/"/>
        <updated>2023-08-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 일상]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-일상">0. 일상<a href="https://kooku0.github.io/journal/2023/08/29/#0-%EC%9D%BC%EC%83%81" class="hash-link" aria-label="0. 일상에 대한 직접 링크" title="0. 일상에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="와인-자격증-시험을-쳤다">와인 자격증 시험을 쳤다.<a href="https://kooku0.github.io/journal/2023/08/29/#%EF%BF%BD%EF%BF%BD%EC%99%80%EC%9D%B8-%EC%9E%90%EA%B2%A9%EC%A6%9D-%EC%8B%9C%ED%97%98%EC%9D%84-%EC%B3%A4%EB%8B%A4" class="hash-link" aria-label="와인 자격증 시험을 쳤다.에 대한 직접 링크" title="와인 자격증 시험을 쳤다.에 대한 직접 링크">​</a></h3>
<ul>
<li>8월 26일(토) 11시 와인전문가 자격증 Level 2 시험을 쳤다.</li>
<li>전날 휴가를 쓰고 하루종일 공부하고 밤을 새서 쳤는데 그렇게 잘본것 같지는 않았다. 책을 모두 정리하고 문제에 나올만한 것들 다시 추리고 암기했는데도 어려웠다. ㅠㅠ 외국어로된 지역명이다 보니 머릿속에 저장이 잘 안된다. 포도 품종 20여개에 품종별 특징(향, 맛), 원산지만 외우는데도 힘들었다. 합격을 할 것 같은데 그렇게 좋은 점수로 합격할 것 같지는 않다 ㅠㅠ 미리미리 공부했어야 하는데..</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="사이드-프로젝트">사이드 프로젝트<a href="https://kooku0.github.io/journal/2023/08/29/#%EC%82%AC%EC%9D%B4%EB%93%9C-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8" class="hash-link" aria-label="사이드 프로젝트에 대한 직접 링크" title="사이드 프로젝트에 대한 직접 링크">​</a></h3>
<ul>
<li>와인앱은 거의 홀드상태</li>
<li>스마트팜은 오픈채팅방에서 정보를 수집하고 있는 중이다. 하지만 국내 정보로는 한계가 너무 있어서 해외에서 정보를 수집해야할 것 같다. 오픈채팅방의 정보는 대부분 스마트팜 기기를 추천해주고 받기를 원하는 것들이다.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="자기계발">자기계발<a href="https://kooku0.github.io/journal/2023/08/29/#%EC%9E%90%EA%B8%B0%EA%B3%84%EB%B0%9C" class="hash-link" aria-label="자기계발에 대한 직접 링크" title="자기계발에 대한 직접 링크">​</a></h3>
<ul>
<li>요즘 자기계발 진짜 안한다. 반성하자...</li>
<li>운동, 책, 개발, 일기, 등등.. 다시 여행을 한 번 가야하나</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-아주-작은-습관의-힘-읽고">1. "아주 작은 습관의 힘" 읽고<a href="https://kooku0.github.io/journal/2023/08/29/#1-%EC%95%84%EC%A3%BC-%EC%9E%91%EC%9D%80-%EC%8A%B5%EA%B4%80%EC%9D%98-%ED%9E%98-%EF%BF%BD%EC%9D%BD%EA%B3%A0" class="hash-link" aria-label="1. &quot;아주 작은 습관의 힘&quot; 읽고에 대한 직접 링크" title="1. &quot;아주 작은 습관의 힘&quot; 읽고에 대한 직접 링크">​</a></h2>
<div class="theme-admonition theme-admonition-note admonition_zbkM alert alert--secondary"><div class="admonitionHeading_ZYze"><span class="admonitionIcon_Lqel"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>part 1 아주 작은 습관이 만드는 극적인 변화</div><div class="admonitionContent_Iunh"><h2 class="anchor anchorWithStickyNavbar_H2Uu" id="chapter-02-정체성-사람을-움직이는-가장-큰-비밀">Chapter 02 정체성, 사람을 움직이는 가장 큰 비밀<a href="https://kooku0.github.io/journal/2023/08/29/#chapter-02-%EC%A0%95%EC%B2%B4%EC%84%B1-%EC%82%AC%EB%9E%8C%EC%9D%84-%EC%9B%80%EC%A7%81%EC%9D%B4%EB%8A%94-%EA%B0%80%EC%9E%A5-%ED%81%B0-%EB%B9%84%EB%B0%80" class="hash-link" aria-label="Chapter 02 정체성, 사람을 움직이는 가장 큰 비밀에 대한 직접 링크" title="Chapter 02 정체성, 사람을 움직이는 가장 큰 비밀에 대한 직접 링크">​</a></h2><p>습관을 바꾸기가 어려운 것은 두 가지 이유 때문이다. 첫째, 변화하고자 하는 대상이 잘못되었다. 둘째, 변화의 방식이 잘못되었다. 이 챕터에서는 첫 번째에 대해 이야기할 것이다. 변화가 일어날 수 있는 수준은 세 개의 층으로 이뤄져 있다.</p><p><strong>첫 번째 층은 '결과'를 변화시키는 것이다.</strong> 살을 뺀다던가 책을 낸다거나 챔피언십을 따낸다는 하는 것이다. 우리가 세운 목표 대부분은 이 단계와 연관되어 있다.</p><p><strong>두 번째 층은 '과정'을 변화시키는 것이다.</strong> 이 층은 우리의 습관과 시스템을 변화시키는 데 맞춰져 있다. 매일 체육관에서 새로운 운동을 해본다든가, 작업 흐름을 개선하고자 책상에 널린 잡동사니들을 정리한다든가 하는 것이다. 우리가 세운 습관 대부분이 이 단계와 연관되어 있다.</p><p><strong>세 번째 층은 '정체성'을 변화시키는 것이다.</strong> 이 층은 우리의 믿음을 변화시키는 데 맞춰져 있다. 세계관, 자아상, 자신과 타인에 대한 판단같은 것들이다. 우리가 가지고 있는 믿음, 가설, 편견들 대부분이 이 단계와 연관되어 있다.</p><p>결과는 우리가 얻어낸 것이며, 과정은 우리가 해나가는 것이다. 그리고 정체성은 우리가 맏고 있는 것이다.</p><p>많은 사람들이 자신이 얻고자 하는 것에 초점을 맞춰 습관을 변화시키려고 한다. 그러나 이런 태도는 결과 중심의 습관을 형성한다. 그러나 지속하기 위해서는 정체성 중심의 습과능ㄹ 세워야 한다. 이는 내가 어떤 사람이 되고 싶은지에 집중하는데서 시작한다.</p><p>우리는 뭔가를 개선하고자 할 때 정체성 변화를 생각하지 않는다. 그저 이렇게 생각할 뿐이다. "날씬해지고 싶어(결과). 이번 다이어트를 계속하면 날씬해질 거야(과정)." 목표를 정하고, 그 목표를 이루기 위해 자신이 해야 할 행동만 생각한다. 자신을 움직이게 하는 '믿음'에 대해서는 생각하지 않는다. 스스로를 바라보는 방식을 바꾸지 않고는 아무것도 변하지 않음을 깨닫지 못한다.</p><p>나에게 적합하지 않은 행동은 오래 유지되지 않는다. 돈을 많이 벌지만 내가 버는 것보다 쓰는 걸 더 잘하는 사람이라면 계속 돈을 쓰는 쪽으로 이끌릴 것이다. 더 건강해지고 싶은데, 뭔가를 성취하는 것보다 편안함을 우선시하는 사람이라면 운동보다는 쉬는 쪽으로 이끌릴 것이다.</p><p>근본적인 믿음이 변화하지 않는다면 습관을 바꾸기란 무척이나 어렵다. 새로운 목표와 계획을 세웠지만 자신이 어떤 사람인지 변화하지 않았다면 말이다.</p><p>본질적인 동기가 최종적인 결과로 나타나는 것은 습관이 정체성의 일부가 될때다. "나는 이런 것을 '원하는' 사람이야."라고 말하는 것은 "나는 '이런' 사람이야"라고 말하는 것과는 매우 다르다.</p><p>자신의 어떤 모습에 자부심을 가질수록 그와 관련된 습관들을 유지하고 싶어진다.</p><p>진정한 행동 변화는 정체성 변화에 있다. 우리는 무언가가 되고 싶어 그와 관련된 습관을 시작한다. 하지만 그 습관을 꾸준히 해나가는 건 오직 그것이 자기 정체성의 일부가 될 때뿐이다.</p><p>어느 날 너무 바쁘거나 지치거나 부담되어서, 또는 수백 가지 다른 이유로 우리는 습관을 유지하기가 힘들어진다. 하지만 장기적으로 그 습관을 유지하지 못하는 진짜 이유는 자신의 자아상과 반대이기 때문이다. 이것이 어떤 한 가지 모습의 정체성에 집착하면 안되는 이유다. 자신이 바라는 최고의 모습이 되려면 자신의 믿음들을 끊임없이 편집하고, 자기 정체성을 수정하고 확장해야만 한다.</p><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="인생을-바꾸는-두-가지-질문">인생을 바꾸는 두 가지 질문<a href="https://kooku0.github.io/journal/2023/08/29/#%EC%9D%B8%EC%83%9D%EC%9D%84-%EB%B0%94%EA%BE%B8%EB%8A%94-%EB%91%90-%EA%B0%80%EC%A7%80-%EC%A7%88%EB%AC%B8" class="hash-link" aria-label="인생을 바꾸는 두 가지 질문에 대한 직접 링크" title="인생을 바꾸는 두 가지 질문에 대한 직접 링크">​</a></h3><p>정체성은 습관에서 나온다. 우리는 어머니 배 속에서부터 어떤 정체성을 가지고 태어나진 않는다. 정체성은 경험을 통해 습득되고 익숙해진다.</p><p>엄밀히 말하면 습관은 정체성을 만들어나간다.</p><p>행위를 반복해나갈수록 그 행위와 연관된 정체성은 강화된다. '정체성'이라는 말은 '실재하다'라는 의미의 라틴어와 '반복적으로'를 뜻하는 'identidem'에서 파생되었다. '반복된 실재'라는 말이다.</p><p>나 자신의 정체성이 지금 당장 무엇이든 간에 우리는 오로지 그것을 믿는다. 정체성에 대한 증거를 가지고 있기 떄문이다.</p><p>자주 반복하는 행동도 습관이 되며, 대개 그런 반복이 습관 형성에 매우 중요한 요소가 된다. 삶에서의 경험 하나하나는 자아상을 조정한다. 그렇지만 공을 한 번 찼다고해서 누구나 스스러를 축구하는 사람으로 여기진 않는다. 하지만 이런 행위를 반복해나가면 증거가 서서히 쌓이고, 자아상이 변화하기 시작한다.</p><p>한 번의 특별한 경험은 그 영향력이 서서히 사라지지만, 습관은 시간과 함께 그 영향력이 더욱 강화된다. 즉, 습관은 정체성을 형성하는 가장 큰 증거가 되는 것이다. 이런 관점에서 습관을 세운다는 것은 자기 자신을 만들어나가는 과정이기도 하다.</p><p>이는 점진적인 빈화다. 아주 작은 노력 하나, 완젼히 변화하겠다는 결심하는 것만으로 우리는 변화하지 않는다. 우리는 조금씩, 매일매일, 하나하나씩 변화한다. 자아는 아주 미세하게 지속적으로 진화해나간다.</p></div></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.08.20]]></title>
        <id>https://kooku0.github.io/journal/2023/08/20/</id>
        <link href="https://kooku0.github.io/journal/2023/08/20/"/>
        <updated>2023-08-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 일상]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-일상">0. 일상<a href="https://kooku0.github.io/journal/2023/08/20/#0-%EC%9D%BC%EC%83%81" class="hash-link" aria-label="0. 일상에 대한 직접 링크" title="0. 일상에 대한 직접 링크">​</a></h2>
<ul>
<li>오펜하이머 영화를 봤는데 진짜 재미있었다. 오펜하이머라는 사람의 전기를 다루는 영화였고 호불호가 있다고 들었는데 전쟁 영화를 생각하고 온 사람들은 실망할 영화였다. 극중 인물들의 연기가 압도적이였다. 인물의 고뇌나 심경을 강조하고 싶을 때 bgm으로 관중들까지 같은 감정을 느끼도록 만드는 연출은 진짜 압도적이였다.</li>
<li>요즘 개발 공부를 안하고 있다. geek-news나 github에 올라오는 trend를 살펴보고 좋은 문화, 문서화, 협업방법들, 새로운 서비스나 내가 속한 도메인의 동향들을 읽는데 더 흥미가 있다. 높은 생산성과 일을 잘하는데는 개발관련 지식은 지금 내가 가지고 있는 것 만으로도 충분 혹은 기존에 공부한 내용만 완벽히 이해하는 정도로도 충분하다고 생각했고 새로운 기술을 도입해야할 때 해당 기술을 공부하면 될꺼라 생각한다. 팀에 바로 도움이 되고 내가 속한 팀 그리고 회사에 도움이 되는건 협업, 문화, 문서화 그리고 내가 개발하고 있는 서비스에 대한 폭넓은 지식과 업계의 동향들을 익혀 전파하는게 훨씬 도움이 된다고 생각했기 때문이다. 기존의 틀을 부술 새로운 아이디어를 내면 더욱 좋을것이고 말이다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-아주-작은-습관의-힘-읽고">1. "아주 작은 습관의 힘" 읽고<a href="https://kooku0.github.io/journal/2023/08/20/#1-%EC%95%84%EC%A3%BC-%EC%9E%91%EC%9D%80-%EC%8A%B5%EA%B4%80%EC%9D%98-%ED%9E%98-%EC%9D%BD%EA%B3%A0" class="hash-link" aria-label="1. &quot;아주 작은 습관의 힘&quot; 읽고에 대한 직접 링크" title="1. &quot;아주 작은 습관의 힘&quot; 읽고에 대한 직접 링크">​</a></h2>
<div class="theme-admonition theme-admonition-note admonition_zbkM alert alert--secondary"><div class="admonitionHeading_ZYze"><span class="admonitionIcon_Lqel"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>part 1 아주 작은 습관이 만드는 극적인 변화</div><div class="admonitionContent_Iunh"><h2 class="anchor anchorWithStickyNavbar_H2Uu" id="chapter-01-평범했던-선수들은-어떻게-세계-최고가-되었을까">Chapter 01 평범했던 선수들은 어떻게 세계 최고가 되었을까?<a href="https://kooku0.github.io/journal/2023/08/20/#chapter-01-%ED%8F%89%EB%B2%94%ED%96%88%EB%8D%98-%EC%84%A0%EC%88%98%EB%93%A4%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%84%B8%EA%B3%84-%EC%B5%9C%EA%B3%A0%EA%B0%80-%EB%90%98%EC%97%88%EC%9D%84%EA%B9%8C" class="hash-link" aria-label="Chapter 01 평범했던 선수들은 어떻게 세계 최고가 되었을까?에 대한 직접 링크" title="Chapter 01 평범했던 선수들은 어떻게 세계 최고가 되었을까?에 대한 직접 링크">​</a></h2><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="매일-1퍼센트씩-달라졌을-뿐인데">매일 1퍼센트씩 달라졌을 뿐인데<a href="https://kooku0.github.io/journal/2023/08/20/#%EB%A7%A4%EC%9D%BC-1%ED%8D%BC%EC%84%BC%ED%8A%B8%EC%94%A9-%EB%8B%AC%EB%9D%BC%EC%A1%8C%EC%9D%84-%EB%BF%90%EC%9D%B8%EB%8D%B0" class="hash-link" aria-label="매일 1퍼센트씩 달라졌을 뿐인데에 대한 직접 링크" title="매일 1퍼센트씩 달라졌을 뿐인데에 대한 직접 링크">​</a></h3><p>어떤 중요한 순간은 과대평가되는 반면, 매일의 사소한 진전들은 과소평과되기 쉽다. 흔히 우리는 대단한 행위가 있어야만 성공할 수 있다고 확신한다. 살을 빼고, 회사를 설립하고, 책을 쓰고, 챔피언십을 따내는 등 어떤 목표들을 이루려면 어마어마한 개선이 있어야 한다고 생각하며 자신을 압박한다.</p><p>1퍼센트의 성장은 눈에 띄지 않는다. 가끔은 전혀 알아차리지 못할 때도 있다. 하지만 이는 무척이나 의미있는 일이다. 특히 장기적인 관점에서는 더욱 그렇다. 지극히 작은 발전은 시간이 흐르면 믿지 못할 만큼 큰 차이로 나타날 수 있다.</p><p>우리는 작은 변화들을 무시한다. 그 순간에는 그리 중요하게 보이지 않기 때문이다. 결과는 당장 눈에 보이지 않는다. 그렇다 보니 우리는 쉽게 이전의 일상으로 돌아간다.</p><p>불행히도 변화는 느리게 일어난다. 우리는 곧 나쁜 습관으로 돌아간다. 오늘 정크푸드를 먹었다 해도 체중계 바늘이 바뀌진 않는다. 오늘 밤늦게까지 일하고 가족을 소홀히 한다 해도 가족은 우리를 이해해준다. 오늘 할 일을 내일로 미뤄도 대개는 제시간에 끝마치게 된다. 결심은 잊히기 쉽다.</p><p>지금 당장 어떤 방법이 성공적이든 성공적이지 않든 그것이 중요하진 않다. 중요한 건 우리가 가지고 있는 습관이 성공으로 가능 경로에 있느냐는 것이다. 현재 일어난 결과보다 지금 어디에 서있느냐가 훨씬 더 중요하다.</p><p>결과는 그동안의 습관이 쌓인 것이다. 순자산은 그동안의 결제적 습관이 쌓인 결과다. 몸무게는 그동안의 식습관이 쌓인 결과이고, 지식은 그동안의 학습 습관이 쌓인 결과다. 우리는 우리가 반복해서 했던 일의 결과를 얻는다.</p><p>자신의 인생이 어디로 갈지 궁금한가? 자잘한 발전과 퇴보를 그래프로 그려보고 매일의 선택이 10년, 20년 후를 어떻게 그려나가는지 확인해보라. 당신은 매달 버는 것보다 덜 쓰는가? 매주 체육관에 가는가? 매일 책을 읽거나 새로운 것을 배우고 있는가? 이런 작은 분투가 우리의 미래를 규정한다.</p><p>시간은 성공과 실패 사이의 간격을 벌려놓는다. 우리가 어디에 시간을 들였든 그것은 복리로 증가한다.</p><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="낙담의-골짜기를-견뎌라">낙담의 골짜기를 견뎌라<a href="https://kooku0.github.io/journal/2023/08/20/#%EB%82%99%EB%8B%B4%EC%9D%98-%EA%B3%A8%EC%A7%9C%EA%B8%B0%EB%A5%BC-%EA%B2%AC%EB%8E%8C%EB%9D%BC" class="hash-link" aria-label="낙담의 골짜기를 견뎌라에 대한 직접 링크" title="낙담의 골짜기를 견뎌라에 대한 직접 링크">​</a></h3><p>앞에 있는 테이블에 얼음덩어리가 하나 있다고 해보자. 현재는 영하 4도 정도지만 방은 서서히 따뜻해지고 있다. 영하 4도, 영하 3도, 영하 2도, 영하 1도, 아직 테이블에는 얼음덩어리가 있다. 0도가 된다. 얼음이 녹기 시작한다. 온도는 그전까지도 계속 올랐지만 변화가 없어 보였다. 그러나 영하 1도에서 1도가 더 오르자 거대한 변화가 나타나기 시작한다.</p><p>이처럼 중대한 돌파구의 순간이란 대개 이전의 수많은 행위들이 쌓이고 쌓인 결과다. 이런 것들이 잠재돼 있던 힘을 발휘해 주요 변화를 일으킨다. 이런 패턴은 어디서나 나타난다. 암 종양은 80퍼센트 성장할 떄까지 발결되지 않고 퍼져나가다가 한 달 만에 신체 전체를 점령한다. 대나무는 처음 5년간 땅속 광범위한 지역에 걸쳐 뿌리를 내리는 동안에는 거의 눈에 띄지 않지만 이후 6주 만에 지상 30미터 높이로 자란다.</p><p>습관 역시 대부분 중대한 한계점에 도달해서 새로운 성과를 보이기 전까지는 아무 차이가 없는 것처럼 보인다.</p><p>꾸준한 습관을 세우기 어려운 이유는 어렷 있지만 이런 과정의 어려움도 그중 하나다. 변화는 극히 작고 눈에 보이는 결과는 없으니 쉽게 그만두는 것이다. 의미있는 차이를 만들어내고 싶다면 정체기, 그러니까 여기서 '잠재력 잠복기'라고 부르는 기간을 돌파할 때까지 습관을 유지해야 한다.</p><p>마침내 잠재력 잠복기를 돌파하고 나면 모르는 사람들은 하룻밤 사이에 성공했다고 말할 것이다. 세상은 그 모든 과정이 아니라 가장 극적인 사건만 본다. 하지만 자신은 얼마나 오랫동안 그 일을 해왔는지 안다. 한 발자국도 나아가지 못한 것 같을 때도 계속 밀어붙여서 결국에는 오늘이 만들어졌음을 안다.</p><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="목표-따윈-쓰레기통에-던져버리기">목표 따윈 쓰레기통에 던져버리기<a href="https://kooku0.github.io/journal/2023/08/20/#%EB%AA%A9%ED%91%9C-%EB%94%B0%EC%9C%88-%EC%93%B0%EB%A0%88%EA%B8%B0%ED%86%B5%EC%97%90-%EB%8D%98%EC%A0%B8%EB%B2%84%EB%A6%AC%EA%B8%B0" class="hash-link" aria-label="목표 따윈 쓰레기통에 던져버리기에 대한 직접 링크" title="목표 따윈 쓰레기통에 던져버리기에 대한 직접 링크">​</a></h3><p>흔히 몸매를 가꾸든, 회사를 운영하든, 걱정을 덜하고 더욱 편안하게 지내는 것이든 원하는 것을 얻으려면 구체적이고 실행 가능한 목표를 세워야 한다고 말한다.</p><p>나 역시 습관에 대해 오랫동안 이런 관점에서 접근했다. 습관 하나하나는 곧 도달해야 할 구체적인 목표였다. 하지만 그런 목표들 중에서 성공한 것은 극히 일부였고 대부분 실패했다. 나는 내가 얻어낸 결과들이 처음에 세웠던 목표와는 거의 관계가 없고, 사실 모든 것은 시스템에 달려 있다는 것을 깨달았다.</p><p>시스템과 목표의 차이는 무엇일까? 목표는 우리가 얻어내고자 하는 결과이며, 시스템은 그 결과로 이끄는 과정이다.</p><ul>
<li>감독의 목표는 챔피언십을 획득하는 것이다. 그렇다면 시스템은 선수들을 선발하는 방식, 코치들을 다루는 방식, 실행하는 방식이다.</li>
<li>기업가의 목표는 수백만 달러짜리 사업을 세우는 것이다. 그렇다면 시스템은 제품이나 서비스에 대한 아이디어를 테스트하는 법, 직원을 고용하는 법, 마케팅 캠페인을 하는 법이다.</li>
</ul><p>이제 흥미로운 질문을 해보자. 목표를 완전히 무시하고 오직 시스템에만 집중한다면 그래도 성공할까? 예를 들어 당신이 야구 코치인데 챔피언십을 획득하겠다는 목표를 생각하지 않고 팀에 매일 어떻게 연습할 것인지에만 집중한다면 그래도 결과를 낼 수 있을까?</p><p>나는 '그렇다'고 생각한다.</p><p>어떤 스포츠든 목표는 최고의 점수를 달성하는 것이다. 하지만 그렇다고 해서 경기 내내 점수판만 응시하는 건 말도 안되는 것이다. 실제로 승리할 유일한 방법은 매일 더 나아지는 것 뿐이다.</p><p>미국 프로 미식축구 대회 슈퍼볼 3회 우승자 빌 윌시는 말했다. "점수를 신경쓰는 건 점수뿐이다." 이는 삶의 다른 영역도 마찬가지다. 더 나은 결과를 내고 싶다면 목표를 세운는 일은 잊어라. 대신 시스템에 집중하라.</p><p>목표가 무용지물이라는 말일까? 물론 아니다. 목표는 방향을 설정하는 데 필요하며 시스템은 과정을 제대로 해나가는 데 필요하다. 그러나 목표를 생각하느라 너무 많은 시간을 들이고 시스템을 고안하는 데는 시간을 투자하지 않을 때 문제가 발생한다.</p><h4 class="anchor anchorWithStickyNavbar_H2Uu" id="문제-1-성공한-사람도-성공하지-못한-사람도-목표는-같다">문제 1. 성공한 사람도, 성공하지 못한 사람도 목표는 같다.<a href="https://kooku0.github.io/journal/2023/08/20/#%EB%AC%B8%EC%A0%9C-1-%EC%84%B1%EA%B3%B5%ED%95%9C-%EC%82%AC%EB%9E%8C%EB%8F%84-%EC%84%B1%EA%B3%B5%ED%95%98%EC%A7%80-%EB%AA%BB%ED%95%9C-%EC%82%AC%EB%9E%8C%EB%8F%84-%EB%AA%A9%ED%91%9C%EB%8A%94-%EA%B0%99%EB%8B%A4" class="hash-link" aria-label="문제 1. 성공한 사람도, 성공하지 못한 사람도 목표는 같다.에 대한 직접 링크" title="문제 1. 성공한 사람도, 성공하지 못한 사람도 목표는 같다.에 대한 직접 링크">​</a></h4><p>목표 설정에 집중하다 보면 심각한 승자 편향적 사고에 매몰될 수 있다. 우리는 승리한 사람들에게 집중한다. 야심 찬 목표가 그들의 성공을 이끌었다고 추측하는 실수를 범하고, 누구나 목표를 가지고 있지만 모두가 성공한 것은 아니라는 사실을 간과한다.</p><p>올림픽에 출전한 선수는 모두가 금메달을 원한다. 입사 지원자 모두가 구직을 바란다. 성공한 사람도, 성공하지 못한 사람도 목표는 같다. 목표는 승자와 패자를 가르는 차이가 될 수 없다. 목표는 늘 거기에 있었다. 결과에 차이가 생긴 건 지속적으로 작은 개선들을 만들어내는 시스템을 시행한 것, 그뿐이었다.</p><h4 class="anchor anchorWithStickyNavbar_H2Uu" id="문제-2-목표-달성은-일시적-변화일-뿐이다">문제 2. 목표 달성은 일시적 변화일 뿐이다.<a href="https://kooku0.github.io/journal/2023/08/20/#%EB%AC%B8%EC%A0%9C-2-%EB%AA%A9%ED%91%9C-%EB%8B%AC%EC%84%B1%EC%9D%80-%EC%9D%BC%EC%8B%9C%EC%A0%81-%EB%B3%80%ED%99%94%EC%9D%BC-%EB%BF%90%EC%9D%B4%EB%8B%A4" class="hash-link" aria-label="문제 2. 목표 달성은 일시적 변화일 뿐이다.에 대한 직접 링크" title="문제 2. 목표 달성은 일시적 변화일 뿐이다.에 대한 직접 링크">​</a></h4><p>지저분한 방 안에 있다고 생각해보라. 방을 치우리고 목표를 세운다. 그리고 당장 청소하는 데 필요한 에너지를 끌어올려 방을 치웠다. 하지만 대충대충 청소하거나 뭐든 잘 버리지 못하는 사람이라면 방은 또 지저분해질 것이다. 이렇듯 계속 같은 결과가 나타난다는 것은 이런 결과의 배경이 된 시스템을 바꾸지 못했기 때문이다. 원인을 다루지 않고 증상만 치유한 것이다.</p><p>목표를 달성하는 것은 우리 인생의 '한순간'을 변화시킬 뿐이다. 이는 '개선'과는 다르다. 진짜로 해야할 일은 결과를 유발하는 시스템을 바꾸는 것이다. 결과 수준에서 문제를 해결하려고 하면 이는 임시방편일 뿐이다. 결과 수준에서 문제를 해결하려고 하면 이는 임시방편일 뿐이다. 영원히 개선하고자 한다면 결과가 아니라 시스템 단계에서 문제를 해결해야 한다.</p><h4 class="anchor anchorWithStickyNavbar_H2Uu" id="문제-3-목표는-행복을-제한한다">문제 3. 목표는 행복을 제한한다.<a href="https://kooku0.github.io/journal/2023/08/20/#%EB%AC%B8%EC%A0%9C-3-%EB%AA%A9%ED%91%9C%EB%8A%94-%ED%96%89%EB%B3%B5%EC%9D%84-%EC%A0%9C%ED%95%9C%ED%95%9C%EB%8B%A4" class="hash-link" aria-label="문제 3. 목표는 행복을 제한한다.에 대한 직접 링크" title="문제 3. 목��표는 행복을 제한한다.에 대한 직접 링크">​</a></h4><p>목표 뒤에는 이런 가정이 내포되어 있다. '목표에 도달하면 행복해질 거야.' 목표를 우선으로 생각하는 태도의 문제는 다음 표지판에 도달할 때까지 행복을 계속 미룬다는 것이다. 수년동안 나에게 행복이란 미래에 있는 것이었다. 근육을 10킬로그램 증량하기만 하면, 내 사업이 &lt;뉴욕 타임즈&gt;에 실리면 그제야 행복해지고 쉴 수 있을 거라고 여겼다.</p><p>게다가 목표는 '이것 아니면 저것'이라는 양자택일적 갈등을 만들어낸다. 목표를 달성하면 성공하는 것이고, 달성하지 못하면 실패하는 것이라고 말이다. 이는 오판이다. 실제 삶의 행로는 우리가 마음속으로 정해놓은 여정과 정확히 일치하지 않는다. 성공으롤 가는 길은 수없이 많다. 굳이 하나의 시나리오에만 자신의 길을 맞출 이유는 없다.</p><p>시스템 우선주의는 그 해독제를 제공한다. 결과가 아니라 과정을 좋아하게 되면 '이제 행복해져도 돼'라고 말할 시기를 기다리지 않아도 된다. 시스템이 작동하고 있다면 어느 때건 만족할 수 있기 때문이다. 시스템은 우리가 처음 상상했던 한 가지 결과가 아니라 다양한 형태로 성공할 수 있게 해준디ㅏ.</p><h4 class="anchor anchorWithStickyNavbar_H2Uu" id="문제-4-목표와-장기적-발전은-다르다">문제 4. 목표와 장기적 발전은 다르다.<a href="https://kooku0.github.io/journal/2023/08/20/#%EB%AC%B8%EC%A0%9C-4-%EB%AA%A9%ED%91%9C%EC%99%80-%EC%9E%A5%EA%B8%B0%EC%A0%81-%EB%B0%9C%EC%A0%84%EC%9D%80-%EB%8B%A4%EB%A5%B4%EB%8B%A4" class="hash-link" aria-label="문제 4. 목표와 장기적 발전은 다르다.에 대한 직접 링크" title="문제 4. 목표와 장기적 발전은 다르다.에 대한 직접 링크">​</a></h4><p>목표 중심적 사고방식은 '요요 현상'을 불러올 수 있다. 달리기 선수들은 경기가 있으면 몇 달 동안 열심히 운동한 끝에 결승선을 통과한다. 그리고 당분간은 훈련을 멈춘다. 이미 끝난 경기는 더 이상 동기를 자극하지 않는 것이다.</p><p>목표 설정의 목적은 게임에서 이기는 것이다. 반면 시스템 구축의 목적은 게임을 계속 해나가는 것이다. 장기적으로 발전하기 위해서는 목표 설정보다는 시스템을 구축해야 한다. 성취하는 것이 아니라 계속해서 개선하고 발전해나가는 순환 고리를 만드는 것이다. 즉, '과정'에 전념하는 것이 '벌전'을 결정한다.</p><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="바보야-문제는-시스템이야">바보야, 문제는 시스템이야<a href="https://kooku0.github.io/journal/2023/08/20/#%EB%B0%94%EB%B3%B4%EC%95%BC-%EB%AC%B8%EC%A0%9C%EB%8A%94-%EC%8B%9C%EC%8A%A4%ED%85%9C%EC%9D%B4%EC%95%BC" class="hash-link" aria-label="바보야, 문제는 시스템이야에 대한 직접 링크" title="바보야, 문제는 시스템이야에 대한 직접 링크">​</a></h3><p>습관을 바꾸기가 어렵다면 우리 자신이 문제가 아니다. 문제는 우리의 시스템이다. 나쁜 습관은 그 자체로 계속 반복되는데, 이는 우리가 변화하고 싶지 않아서가 아니라 변화할 수 없는 나쁜 시스템을 가지고 있기 때문이다.</p><p>목표를 높이지 마라. 시스템의 수준을 낮춰라. 하나의 목표가 아니라 전체적인 시스템에 초점을 맞추는 것이 이 책의 핵심 주제다. 아주 작은 습관도 모여 놀라운 결과를 이뤄낸다.</p><p>습관은 작지만 강하다. 정기적인 실행 또는 일상적인 행동들은 작고 실행하기 쉬울 뿐만 아니라 강력한 힘을 내는 근원이다. 시스템의 한 구성 요소로 종합적 성장을 이끈다.</p></div></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.08.13]]></title>
        <id>https://kooku0.github.io/journal/2023/08/13/</id>
        <link href="https://kooku0.github.io/journal/2023/08/13/"/>
        <updated>2023-08-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 근황]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-근황">0. 근황<a href="https://kooku0.github.io/journal/2023/08/13/#0-%EA%B7%BC%ED%99%A9" class="hash-link" aria-label="0. 근황에 대한 직접 링크" title="0. 근황에 대한 직접 링크">​</a></h2>
<ol>
<li>일기쓰는 습관</li>
</ol>
<ul>
<li>8월 초에 글을 거의 쓰지 못했는데 반성하고 있다. 아주 적은 글이라도 조금씩 작성하면서 습관을 들여야 했는데 그것조차 쉽지 않았다. 당연히 게으름 때문.. 아직 일기를 쓴다는게 익숙치 않은 것 같다. 마치 운동을 하는 것 처럼. 최근 습관에 대한 책을 읽고 있는데 이를 기반으로 일기 쓰는 습관을 가지도록 노력해 볼 생각이다. 좋은 습관을 기르고 싶은데 자주 실패한다면, 습관의 힘을 잘 모르겠다 라고 생각하는 사람이라면 "아주 작은 습관의 힘" 매우 강추!</li>
</ul>
<ol start="2">
<li>휴식</li>
</ol>
<ul>
<li>휴식이 너무 필요한 것 같아서 금, 월 휴가를 신청하고 3박 4일 괌으로 휴가를 다녀왔다. 가서 스노쿨링과 스쿠버다이빙을 배웠는데 너무 재미있었다. 다음 번 여행갈 때 스노쿨링 할 수 있는지 를 우선적으로 볼 것 같기도 하다. 추가로 회사에서 프리다이빙 하는 그룹이 있어서 해당 그룹에 들어가 취미로 발전까지 시켜볼까 생각중.. 우선 와인 자격증부터 따고!</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-폴더구조-두-번째-논의">1. 폴더구조 두 번째 논의<a href="https://kooku0.github.io/journal/2023/08/13/#1-%ED%8F%B4%EB%8D%94%EA%B5%AC%EC%A1%B0-%EB%91%90-%EB%B2%88%EC%A7%B8-%EB%85%BC%EC%9D%98" class="hash-link" aria-label="1. 폴더구조 두 번째 논의에 대한 직접 링크" title="1. 폴더구조 두 번째 논의에 대한 직접 링크">​</a></h2>
<p>회사에서 폴더구조를 논의하고 있다고 <a href="https://kooku0.github.io/journal/2023/07/05/">이전에 적은 적</a>이 있는데 이후 두 번째 논의를 했다. (논의를 한지 꽤 되었는데 정리를 최근에 했다.) 해당 논의를 하고 난 결론을 간단히 적어보려고 한다. 논의를 진행 할 때 네이버 클로바로 전부 녹음을 했고 논의가 끝난 후 모두 옮겨젹고 요약을 했다. 글을 적으면서 알게 된건 모두 생각이 다르다는 것 (물론 같은 생각을 한 것들도 많았다). 이렇게 논의를 여러번 해나가면서 좋은 결과를 만들길 기대한다.</p>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="1-이랬으면-좋겠어">1. 이랬으면 좋겠어<a href="https://kooku0.github.io/journal/2023/08/13/#1-%EC%9D%B4%EB%9E%AC%EC%9C%BC%EB%A9%B4-%EC%A2%8B%EA%B2%A0%EC%96%B4" class="hash-link" aria-label="1. 이랬으면 좋겠어에 대한 직접 링크" title="1. 이랬으면 좋겠어에 대한 직접 링크">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="팀원-a">팀원 A<a href="https://kooku0.github.io/journal/2023/08/13/#%ED%8C%80%EC%9B%90-a" class="hash-link" aria-label="팀원 A에 대한 직접 링크" title="팀원 A에 대한 직접 링크">​</a></h4>
<ul>
<li>폴더구조에 대한 논의를 통일 시키지 않으면 앞으로 계속 혼란이 생길 것 같다.</li>
<li>한 사람이 다른 생각을 가지고 있으면 원레포로 작업하는게 오히려 고통이 더 따를 것 같다.</li>
<li>나중에 구분이 애매해지는게 별로</li>
<li>유지 보수성 <strong>측면에서</strong> 앞으로 의논을 최대한 덜 하는 방향으로 이야기 해보고 싶다.</li>
</ul>
<p>[의견]</p>
<ul>
<li>큰 단위의 통일을 시켜야 하는데 이걸 초반에 잡는게 현실적으로 힘들 것 같고 발생할 때마다 논의를 해야 한다.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="팀원-b">팀원 B<a href="https://kooku0.github.io/journal/2023/08/13/#%ED%8C%80%EC%9B%90-b" class="hash-link" aria-label="팀원 B에 대한 직접 링크" title="팀원 B에 대한 직접 링크">​</a></h4>
<ul>
<li>나중에 혼란이 생기는게 별로다.</li>
<li>common과 shared의 기준이 애매하지 않았으면 좋겠다.</li>
</ul>
<p>[의견]</p>
<ul>
<li>사람마다 다르게 생길만한 요소가 있는것들은 정해버리면 좋을 것 같다.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="팀원-c">팀원 C<a href="https://kooku0.github.io/journal/2023/08/13/#%ED%8C%80%EC%9B%90-c" class="hash-link" aria-label="팀원 C에 대한 직접 링크" title="팀원 C에 대한 직접 링크">​</a></h4>
<ul>
<li>common과 shared를 비즈니스 로직의 포함여부로 구분하고 애매한게 생기면 그때그때 이야기 해보자. 그게 많이 생기지는 않을 것 같다.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="팀원-d">팀원 D<a href="https://kooku0.github.io/journal/2023/08/13/#%ED%8C%80%EC%9B%90-d" class="hash-link" aria-label="팀원 D에 대한 직접 링크" title="팀원 D에 대한 직접 링크">​</a></h4>
<ul>
<li>혼란스럽고 헷갈리는게 없었으면 좋겠다. (지금도 앞으로도)</li>
</ul>
<p>[의견]</p>
<ul>
<li>사람마다 생각이 다른 부분들이 존재하기에 이것들을 매번 논의하고 합의를 보기 보다는 그냥 이렇게 하자!로 정해버리면 좋을 것 같다.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="2-중간-정리">2. 중간 정리<a href="https://kooku0.github.io/journal/2023/08/13/#2-%EC%A4%91%EA%B0%84-%EC%A0%95%EB%A6%AC" class="hash-link" aria-label="2. 중간 정리에 대한 직접 링크" title="2. 중간 정리에 대한 직접 링크">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="모두가-원하는거">모두가 원하는거<a href="https://kooku0.github.io/journal/2023/08/13/#%EB%AA%A8%EB%91%90%EA%B0%80-%EC%9B%90%ED%95%98%EB%8A%94%EA%B1%B0" class="hash-link" aria-label="모두가 원하는거에 대한 직접 링크" title="모두가 원하는거에 대한 직접 링크">​</a></h4>
<ul>
<li>모두가 생각이 일치하는, 동의하는 구조를 만들어야함.</li>
<li>기준을 애매하게 정해버리면 안됨.</li>
<li>앞으로 논의를 최대한 덜 하는 방향이 되어야함.<!-- -->
<ul>
<li>애매하게 정하면 혼란이 생겨서 매번 논의를 하고 고민을 하고 불필요한 논의만 많아짐</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="생각이-조금-다른거">생각이 조금 다른거<a href="https://kooku0.github.io/journal/2023/08/13/#%EC%83%9D%EA%B0%81%EC%9D%B4-%EC%A1%B0%EA%B8%88-%EB%8B%A4%EB%A5%B8%EA%B1%B0" class="hash-link" aria-label="생각이 조금 다른거에 대한 직접 링크" title="생각이 조금 다른거에 대한 직접 링크">​</a></h4>
<ul>
<li>팀원 B, D: <strong>애매한게 아예 없어져 버리면 좋겠다.</strong> 그게 지금 당장 결정되었으면 좋겠다. (지금 명확한 기준을 정해버리길 원함)<!-- -->
<ul>
<li>그래서 "애매한건 그냥 이렇게 해버리자! 정해버리면 애매한게 사라지고, 매번 고민하거나 논의할 필요가 없어지지 않을까?" 로 의견을 냄</li>
<li>애매한게 많이 생길 것을 우려함. 위에서 정의한 것들을 바탕으로는 논의를 많이 하더라도 애매한게 줄어들지 않을 것으로 생각함.</li>
</ul>
</li>
<li>팀원 A, C: <strong>애매한게 없어져야 하는건 동의한다.</strong> 지금 애매한걸 다 추려낼 수는 없을 것 같다. 애매한게 생각보다 많지 않을 것 같다. 애매한게 생기면 그 때 깊이 논의해보면 좋을 것 같다.<!-- -->
<ul>
<li>팀원 A: 애매한게 많이 있을 수는 있겠지만 점점 애매한게 줄어들 것이다.</li>
<li>팀원 C: 서로 생각하는 부분이 비슷할 꺼라고 생각한다. 그래서 애매한게 많이 없을 것이고 생기면 그 때 깊이 논의하면 점점 애매한게 줄어들 것이다.</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="3-shared-common-기준">3. shared, common 기준<a href="https://kooku0.github.io/journal/2023/08/13/#3-shared-common-%EA%B8%B0%EC%A4%80" class="hash-link" aria-label="3. shared, common 기준에 대한 직접 링크" title="3. shared, common 기준에 대한 직접 링크">​</a></h3>
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="1-shared">1) shared<a href="https://kooku0.github.io/journal/2023/08/13/#1-shared" class="hash-link" aria-label="1) shared에 대한 직접 링크" title="1) shared에 대한 직접 링크">​</a></h4>
<ul>
<li>page 내부에 있는 것들 중에서 다른 도메인에서도 사용되면 shared로 옮긴다.</li>
<li>여러 도메인에서 사용되는 것들 (component, util, hook, etc)</li>
<li>비즈니스 로직이 들어간 것</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_H2Uu" id="service">service<a href="https://kooku0.github.io/journal/2023/08/13/#service" class="hash-link" aria-label="service에 대한 직접 링크" title="service에 대한 직접 링크">​</a></h5>
<ul>
<li>외부에 의존적인 것들을 모아둔 것.</li>
<li>외부 라이브러리를 한 번 wrapping 한 것</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="2-common">2) common<a href="https://kooku0.github.io/journal/2023/08/13/#2-common" class="hash-link" aria-label="2) common에 대한 직접 링크" title="2) common에 대한 직접 링크">​</a></h4>
<ul>
<li>도메인, 비즈니스 로직들이 없는 것</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="4-결론">4. 결론<a href="https://kooku0.github.io/journal/2023/08/13/#4-%EA%B2%B0%EB%A1%A0" class="hash-link" aria-label="4. 결론에 대한 직접 링크" title="4. 결론에 대한 직접 링크">​</a></h3>
<ul>
<li>매번 고민하지 않도록 shared에 기본적으로 만들고 shared에서 common으로 파일을 옮기거나 추상화 시킬 때 깊게 논의하고 고민해보자. 그러면 매번 고민해야할 부분이 많이 없어질 것이다.</li>
</ul>
<hr>
<p>여기까지가 회의 내용을 정리한 것 이고 이후 내 생각을 적어보자면</p>
<ul>
<li>common과 shared를 구분하는 가장 큰 기준이 비즈니스 로직이다. 비즈니스 로직이 없다면 무조껀 common에 넣으면 되는 건가? 명확한 기준이 아니라 느낌적으로 common에 넣을지 안넣을지 정해버리는 일도 생길 수 있지 않을까?<!-- -->
<ul>
<li>-&gt; 비즈니스 로직 말고 다른 기준은 필요 없는걸까?</li>
</ul>
</li>
<li>저번 회의 때 비즈니스 로직을 가지고도 생각이 달랐었다.<!-- -->
<ul>
<li>-&gt; 비즈니스 로직에 대한 정의를 다 같이 내려봐도 좋지 않을까?</li>
</ul>
</li>
<li>common과 shared에 대한 기준을 더욱 명확히 정하지 않는다면 (누구나 동의할만한, 누구나 쉽게 구분할 수 있도록) 아무리 논의를 많이 하더라도 기준은 애매모호하게 계속 남을 것 같다.</li>
<li><strong>음.. common과 shared를 구분하는 기준을 비즈니스 로직으로 잡은게 문제였던 것 같다. common과 shared를 구분하는건 자주 변하는것 vs 자주 변하지 않는것 으로 삼아야 한다. 비즈니스 로직이 common에 들어가면 안되는 이유는 비즈니스 로직이 포함된 것들은 자주 변하기 때문이다.</strong></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-문서화-팀원-모두의-생산성을-끌어올리는-방법">2. 문서화: 팀원 모두의 생산성을 끌어올리는 방법<a href="https://kooku0.github.io/journal/2023/08/13/#2-%EB%AC%B8%EC%84%9C%ED%99%94-%ED%8C%80%EC%9B%90-%EB%AA%A8%EB%91%90%EC%9D%98-%EC%83%9D%EC%82%B0%EC%84%B1%EC%9D%84-%EB%81%8C%EC%96%B4%EC%98%AC%EB%A6%AC%EB%8A%94-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="2. 문서화: 팀원 모두의 생산성을 끌어올리는 방법에 대한 직접 링크" title="2. 문서화: 팀원 모두의 생산성을 끌어올리는 방법에 대한 직접 링크">​</a></h2>
<blockquote>
<p><a href="https://news.hada.io/topic?id=10222" target="_blank" rel="noopener noreferrer">https://news.hada.io/topic?id=10222</a></p>
</blockquote>
<p>문서화의 중요성에 대한 글을 읽었는데 매우 공감가는 말들이라 들고왔다.</p>
<blockquote>
<p>문서는 지식을 전달하는 좋은 방법</p>
<ul>
<li>개발자가 익숙하지 않은 특정작업을 수행하는 경우에 특히 중요함.</li>
<li>문서가 부족하면, 개발자가 작업 수행 방법을 스스로 연구해야 하고, 실수를 하고 작업을 다시 수행하거나, 다른 팀이 질문에 답변할때까지 기다려야 하므로 작업 속도가 느려질 수 있음</li>
<li>이는 1시간 짜리 작업을 금방 2일짜리 작업으로 만들 수 있음</li>
<li>100명의 개발자가 이 일을 해야한다면, 문서 한페이지 누락으로 인한 비용은 개발자 한명의 연간 급여에 해당할 수 있음</li>
</ul>
<p>다른 모든 조건이 같다면, 관련 지식이 많은 개발자가 더 생산적임</p>
<ul>
<li>코드가 어떻게 동작하는지 알기 때문에 코드를 깊게 들여다 볼 필요가 없고</li>
<li>도구를 사용하는 방법을 알고, 피해야하는 함정을 알고 있음</li>
</ul>
</blockquote>
<p>다른 팀들(네이티브 개발자, FE 코어 개발자)과의 컴이 많이 필요한 것들은 문서화를 하지 않는다면 이후 다른 개발자들이 시간과 노력을 매우 많이 사용하게 될 것이다. 기존에 했던 논의, 버그, 검색등을 되풀이하는건 정말로 없어져야 한다. 문서화만 잘해도 엄청나게 많은 노력, 시간을 아낄 수 있지 않을까?</p>
<p>물론 스팩에 대한 문서화는 호불호가 있다. 매번 sync를 맞춰줘야하고 관리해줘야 하기에 불필요한 노동이기에 코드에 스팩을 녹이면 된다고 생각하는 사람도 있다.</p>
<p>물론 동의하는 부분도 있다. 하지만 그건 모든 팀원들이 해당 코드에 익숙할 때의 이야기다. 만약 다른 개발자(백엔드 개발자, 다른 프로젝트를 진행하며 코딩스타일이 완전히 다른 FE 개발자)의 경우에는 이해가 힘들 것이다. 코드에 히스토리를 남기게 되면 본인의 스타일로 만들 것이다. 하지만 문서는 누구나 알기 쉽게 쓰여야 하기 때문에 이는 안하느리만 못하다. 문서화를 굳이 할 필요가 없을만한 간단한 맥락, 특정 기능에 대한 히스토리는 주석으로 코멘트를 남기거나 해당 논의가 이루어졌던 스레드를 남겨보자.</p>
<p>하지만 특정 기능을 개발하면서 겪었던 트러블 슈팅이나 앱의 큰 기능에 대한 것들은 문서로 남겨야 한다. 게속 명세가 변한다면 sync를 맞춰야 하는 수고도 당연히 필요하다. 귀찮다는 이유로 이를 하지 않는다면 문제가 생겼을 때 항상 본인이 해결해야한다. 남들이 이 문제를 해결해주길 기대해서는 안된다. 해당 히스토리는 본인의 머릿속에 있고 다른 사람들이 이를 해결하기 위해서는 엄청나게 많은 시간이 소모될 것이며 본질적인 문제를 해결하는게 아닌 동작하도록 만 코드를 짤 것이 뻔하기 때문이다.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.07.30]]></title>
        <id>https://kooku0.github.io/journal/2023/07/30/</id>
        <link href="https://kooku0.github.io/journal/2023/07/30/"/>
        <updated>2023-07-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 근황]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-근황">0. 근황<a href="https://kooku0.github.io/journal/2023/07/30/#0-%EA%B7%BC%ED%99%A9" class="hash-link" aria-label="0. 근황에 대한 직접 링크" title="0. 근황에 대한 직접 링크">​</a></h2>
<ol>
<li>와인앱</li>
</ol>
<ul>
<li>와인앱은 지금 거의 중단상태다. 다른 우선순위 높은 것들이 너무 많이 나오고 있기 때문이다. 하지만 끝까지 만들기는 할꺼다! 무조껀!</li>
</ul>
<ol start="2">
<li>와인 자격증</li>
</ol>
<ul>
<li>와인 자격증은 8월 26일(토)에 신청했다. 같이 공부하는 사람들이 테이스팅을 너무 잘해서 주눅들기는 한데 Level 2 시험은 이론 공부라.. 나는 이론공부 열심히 해서 자격증은 가장 높은 등급으로 따고 싶다.</li>
<li>테이스팅 자신감 붙으면 Level 3도 도전 해봐야지 💪</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-vite-bundle-analyze-ci-만들기">1. vite bundle analyze ci 만들기<a href="https://kooku0.github.io/journal/2023/07/30/#1-vite-bundle-analyze-ci-%EB%A7%8C%EB%93%A4%EA%B8%B0" class="hash-link" aria-label="1. vite bundle analyze ci 만들기에 대한 직접 링크" title="1. vite bundle analyze ci 만들기에 대한 직접 링크">​</a></h2>
<p><a href="https://github.com/doesdev/rollup-plugin-analyzer" target="_blank" rel="noopener noreferrer">rollup-plugin-analyzer</a> 플러그인이 있는데 진짜 유용하다. 실수로 import 한 패키지가 있는지 확인도 유용하고 (dev 환경에만 들어가야 하는데 production에 포함되는지 확인도 가능) lodash 같이 tree-shacking 안되는 라이블러리가 포함되었는지도 확인이 가능하다.</p>
<p>하지만 vite-plugin-legacy과 같이 사용했을 때 vite-plugin-legacy 이후에 플러그인을 넣었을 때 작동하지 않는 문제가 있다. 파보지는 않았는데 legacy bundling된 이후에 if 문으로 다 건너 뛰어 버리는 것 같다. 그래서 vite-plugin-analyzer 이후에 vite-plugin-legacy가 돌도록 선언해줘야 한다.</p>
<div class="language-js codeBlockContainer_izg7 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_moPJ"><pre tabindex="0" class="prism-code language-js codeBlock_w9zt thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_opl_"><span class="token-line" style="color:#9CDCFE"><span class="token keyword control-flow" style="color:rgb(86, 156, 214)">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token function" style="color:rgb(220, 220, 170)">analyze</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token literal-property property">limit</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">10</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token literal-property property">skipFormatted</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token literal-property property">summaryOnly</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token function-variable function" style="color:rgb(220, 220, 170)">writeTo</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token parameter">analyzeString</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(212, 212, 212)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        fs</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token method function property-access" style="color:rgb(220, 220, 170)">writeFileSync</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">'bundle-analyze.txt'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> analyzeString</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token function" style="color:rgb(220, 220, 170)">legacy</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><br></span></code></pre><div class="buttonGroup_UnaD"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_kuWh" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_tSTY"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_pknt"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>나는 결과를 pr comment로 받아보고 싶기 때문에 번들링 결과를 파일에 저장하고, 이 파일을 읽어 pr-comment로 달아줘야 한다.</p>
<p>파일을 읽고 인코딩한 후 pr-comment actions의 도움을 받아 코멘트에 값을 추가하면 된다~!!</p>
<div class="language-yaml codeBlockContainer_izg7 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_moPJ"><pre tabindex="0" class="prism-code language-yaml codeBlock_w9zt thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_opl_"><span class="token-line" style="color:#9CDCFE"><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Read analyze report</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> read</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">analyze</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">report</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">|</span><span class="token scalar string" style="color:rgb(206, 145, 120)"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token scalar string" style="color:rgb(206, 145, 120)">    report=$(cat ./bundle-analyze.txt | sed '1,2d')</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token scalar string" style="color:rgb(206, 145, 120)">    report_encoded=$(echo "${report//$'\n'/%0A}")</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token scalar string" style="color:rgb(206, 145, 120)">    echo "::set-output name=report::$report_encoded"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> PR comment</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> thollander/actions</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">comment</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">pull</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">request@v2</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token key atrule">message</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">|</span><span class="token scalar string" style="color:rgb(206, 145, 120)"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token scalar string" style="color:rgb(206, 145, 120)">      &lt;h2&gt; :pencil: Bundle Analyze Report&lt;/h2&gt;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token scalar string" style="color:rgb(206, 145, 120)">      &lt;strong&gt;새로운 패키지를 추가했다면 꼭 확인해보세요 🙄 &lt;/strong&gt;&lt;br/&gt;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token scalar string" style="color:rgb(206, 145, 120)">      번들사이즈가 큰 상위 10개 파일을 확인해볼 수 있어요.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token scalar string" style="color:rgb(206, 145, 120)">      &lt;br/&gt;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token scalar string" style="color:rgb(206, 145, 120)">      &lt;br/&gt;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token scalar string" style="color:rgb(206, 145, 120)">      &lt;details&gt;&lt;summary&gt;&lt;strong&gt;분석결과 보기&lt;/strong&gt;&lt;/summary&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      $</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> steps.read</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">analyze</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">report.outputs.report </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      &lt;/details</span><span class="token punctuation" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token key atrule">reactions</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> eyes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> rocket</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token key atrule">comment_tag</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> execution</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token key atrule">mode</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> upsert</span><br></span></code></pre><div class="buttonGroup_UnaD"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_kuWh" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_tSTY"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_pknt"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>tada~ 🎉</p>
<p><img loading="lazy" alt="img" src="https://kooku0.github.io/assets/images/pr-bundle-analyze-b10ba6c16d6babd86dac0b1b79e75d02.png" width="1472" height="1522" class="img_cI1a"></p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-git-commit-내역에서-committer-변경하기">2. Git commit 내역에서 committer 변경하기<a href="https://kooku0.github.io/journal/2023/07/30/#2-git-commit-%EB%82%B4%EC%97%AD%EC%97%90%EC%84%9C-committer-%EB%B3%80%EA%B2%BD%ED%95%98%EA%B8%B0" class="hash-link" aria-label="2. Git commit 내역에서 committer 변경하기에 대한 직접 링크" title="2. Git commit 내역에서 committer 변경하기에 대한 직접 링크">​</a></h2>
<p>github 회사 계정과 개인 계정을 두개 관리하고 있어서 committer가 잘 못 올라간 적이 많았다. author는 바꾸기 쉬웠는데 committer는 바꾸기 어려웠는데 이번에 방법을 찾아서 기록한다.</p>
<div class="language-shell codeBlockContainer_izg7 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_moPJ"><pre tabindex="0" class="prism-code language-shell codeBlock_w9zt thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_opl_"><span class="token-line" style="color:#9CDCFE"><span class="token plain">git filter-branch --env-filter '</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">WRONG_EMAIL="변경전 이메일"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">NEW_NAME="새로운 이름"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">NEW_EMAIL="새로운 이메일"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">if [ "$GIT_COMMITTER_EMAIL" = "$WRONG_EMAIL" ]</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">then</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    export GIT_COMMITTER_NAME="$NEW_NAME"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    export GIT_COMMITTER_EMAIL="$NEW_EMAIL"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">if [ "$GIT_AUTHOR_EMAIL" = "$WRONG_EMAIL" ]</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">then</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    export GIT_AUTHOR_NAME="$NEW_NAME"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    export GIT_AUTHOR_EMAIL="$NEW_EMAIL"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">fi</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">' --tag-name-filter cat -- --branches --tags</span><br></span></code></pre><div class="buttonGroup_UnaD"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_kuWh" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_tSTY"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_pknt"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>참고: <a href="https://velog.io/@anjaekk/Git-push%ED%96%88%EB%8D%98-%EB%AA%A8%EB%93%A0-commit-author%EC%99%80-committer%EB%B3%80%EA%B2%BD" target="_blank" rel="noopener noreferrer">https://velog.io/@anjaekk/Git-push%ED%96%88%EB%8D%98-%EB%AA%A8%EB%93%A0-commit-author%EC%99%80-committer%EB%B3%80%EA%B2%BD</a></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.07.26]]></title>
        <id>https://kooku0.github.io/journal/2023/07/26/</id>
        <link href="https://kooku0.github.io/journal/2023/07/26/"/>
        <updated>2023-07-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 일상]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-일상">0. 일상<a href="https://kooku0.github.io/journal/2023/07/26/#0-%EC%9D%BC%EC%83%81" class="hash-link" aria-label="0. 일상에 대한 직접 링크" title="0. 일상에 대한 직접 링크">​</a></h2>
<ul>
<li>당근에 온지 1주년이 되었다. 시간 엄청 빠르다. 1주년 회고도 써야겠다.</li>
<li>"아주 작은 습관의 힘" 책을 읽고 있는데 그렇게 많이 도움이 되지는 않는다. 하지만 끝까지 읽어보려고 노력중</li>
<li>오늘 오후에 문화의 날 활동으로 레드와인 테이스팅을 한다. 7시에 와인수업도 있어서 오늘은 와인데이</li>
</ul>
<img src="https://kooku0.github.io/assets/images/daangn_1-02ddec0697cd49e0ae4ae0a79fbe03c2.jpg" width="300">
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-nextjs-dockerfile">1. NextJs Dockerfile<a href="https://kooku0.github.io/journal/2023/07/26/#1-nextjs-dockerfile" class="hash-link" aria-label="1. NextJs Dockerfile에 대한 직접 링크" title="1. NextJs Dockerfile에 대한 직접 링크">​</a></h2>
<p>인터넷에 올라오는 것들은 node_modules 사용하는게 대부분이라 yarn berry 사용하는 버전으로 만든거 기록용으로 저장.
누군가는 쓰겠지...</p>
<p>nextConfig의 output에 "standalone" 설정하는거 잊지말자</p>
<blockquote>
<p>standalone에 대한 설명은 여기서: <a href="https://nextjs.org/docs/pages/api-reference/next-config-js/output#automatically-copying-traced-files" target="_blank" rel="noopener noreferrer">https://nextjs.org/docs/pages/api-reference/next-config-js/output#automatically-copying-traced-files</a></p>
</blockquote>
<p>참고: <a href="https://github.com/vercel/next.js/blob/canary/examples/with-docker/Dockerfile" target="_blank" rel="noopener noreferrer">https://github.com/vercel/next.js/blob/canary/examples/with-docker/Dockerfile</a></p>
<div class="language-docker codeBlockContainer_izg7 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_moPJ"><pre tabindex="0" class="prism-code language-docker codeBlock_w9zt thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_opl_"><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM node:18-alpine AS base</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"># Install dependencies only when needed</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM base AS deps</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">RUN apk add --no-cache libc6-compat</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">WORKDIR /app</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"># Install dependencies based on the preferred package manager</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY package.json ./</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY yarn.lock ./</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY .pnp.cjs ./</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY .pnp.loader.mjs ./</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY .yarnrc.yml ./</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY .yarn ./.yarn</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">RUN yarn install --immutable</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"># Rebuild the source code only when needed</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM base AS builder</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">WORKDIR /app</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY --from=deps /app/.yarn ./.yarn</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY --from=deps /app/.pnp.cjs ./pnp.cjs</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY . .</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"># Next.js collects completely anonymous telemetry data about general usage.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"># Learn more here: https://nextjs.org/telemetry</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"># Uncomment the following line in case you want to disable telemetry during the build.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"># ENV NEXT_TELEMETRY_DISABLED 1</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">RUN yarn build</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"># Production image, copy all the files and run next</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM base AS runner</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">WORKDIR /app</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">ENV NODE_ENV production</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">RUN addgroup --system --gid 1001 nodejs</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">RUN adduser --system --uid 1001 nextjs</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY --from=builder /app/public ./public</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"># Automatically leverage output traces to reduce image size</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"># https://nextjs.org/docs/advanced-features/output-file-tracing</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY --from=builder --chown=nextjs:nodejs /app/.pnp.cjs ./</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">RUN rm -rf ./.yarn/cache</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COPY --from=builder --chown=nextjs:nodejs /app/.yarn ./.yarn/</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">USER nextjs</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">EXPOSE 3000</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">ENV PORT 3000</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"># CMD ["node", "server.js"]</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">CMD ["node", "-r", "./.pnp.cjs", "server.js"]</span><br></span></code></pre><div class="buttonGroup_UnaD"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_kuWh" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_tSTY"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_pknt"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-jest-coverage-comment">2. Jest Coverage Comment<a href="https://kooku0.github.io/journal/2023/07/26/#2-jest-coverage-comment" class="hash-link" aria-label="2. Jest Coverage Comment에 대한 직접 링크" title="2. Jest Coverage Comment에 대한 직접 링크">​</a></h2>
<p>ci 단계에서 unit test coverage 측정할 때 codecov actions를 사용하는 경우가 많은데 그렇게 되면 내부 코드가 codecov 로 전송된다는 매우 큰 리스크가 있다. 이에 괜찮은 새로운 actions를 찾아 공유한다.</p>
<p>바로 요것이다. <a href="https://github.com/marketplace/actions/jest-coverage-comment" target="_blank" rel="noopener noreferrer">https://github.com/marketplace/actions/jest-coverage-comment</a></p>
<p>comment도 이쁘게 잘 달아준다.</p>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="step-1-필요-패키지를-설치한다">step 1) 필요 패키지를 설치한다.<a href="https://kooku0.github.io/journal/2023/07/26/#step-1-%ED%95%84%EC%9A%94-%ED%8C%A8%ED%82%A4%EC%A7%80%EB%A5%BC-%EC%84%A4%EC%B9%98%ED%95%9C%EB%8B%A4" class="hash-link" aria-label="step 1) 필요 패키지를 설치한다.에 대한 직접 링크" title="step 1) 필요 패키지를 설치한다.에 대한 직접 링크">​</a></h3>
<div class="language-shell codeBlockContainer_izg7 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_moPJ"><pre tabindex="0" class="prism-code language-shell codeBlock_w9zt thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_opl_"><span class="token-line" style="color:#9CDCFE"><span class="token plain">yarn add -D jest-junit</span><br></span></code></pre><div class="buttonGroup_UnaD"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_kuWh" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_tSTY"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_pknt"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="step-2-ci용-jestconfig-파일을-만든다">step 2) ci용 jest.config 파일을 만든다.<a href="https://kooku0.github.io/journal/2023/07/26/#step-2-ci%EC%9A%A9-jestconfig-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EB%A7%8C%EB%93%A0%EB%8B%A4" class="hash-link" aria-label="step 2) ci용 jest.config 파일을 만든다.에 대한 직접 링크" title="step 2) ci용 jest.config 파일을 만든다.에 대한 직접 링크">​</a></h3>
<p>ci 스크립트에서 jest cli 를 활용하는 방법도 있지만 이게 훨씬 깔끔하다.</p>
<div class="language-ts codeBlockContainer_izg7 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockTitle_cz_2">jest.ci-config.ts</div><div class="codeBlockContent_moPJ"><pre tabindex="0" class="prism-code language-ts codeBlock_w9zt thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_opl_"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">type</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> Config </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'jest'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">import</span><span class="token plain"> defaultConfig </span><span class="token keyword" style="color:rgb(86, 156, 214)">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'./jest.config'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">const</span><span class="token plain"> config</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Config </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token operator" style="color:rgb(212, 212, 212)">...</span><span class="token plain">defaultConfig</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  coverageReporters</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token string" style="color:rgb(206, 145, 120)">'json-summary'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'text'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  reporters</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">'default'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token string" style="color:rgb(206, 145, 120)">'jest-junit'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        outputDirectory</span><span class="token operator" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'./coverage'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">export</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">default</span><span class="token plain"> config</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre><div class="buttonGroup_UnaD"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_kuWh" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_tSTY"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_pknt"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-yaml codeBlockContainer_izg7 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockTitle_cz_2">coverage.yml</div><div class="codeBlockContent_moPJ"><pre tabindex="0" class="prism-code language-yaml codeBlock_w9zt thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_opl_"><span class="token-line" style="color:#9CDCFE"><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Unit Test Coverage</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token key atrule">on</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">pull_request</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token key atrule">env</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token key atrule">CACHED_DEPENDENCY_PATHS</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> github.workspace </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain">/.yarn/unplugged</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token key atrule">GITHUB_TOKEN</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> secrets.GITHUB_TOKEN </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token key atrule">DEFAULT_NODE_VERSION</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">"16.16.0"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token key atrule">coverage</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token key atrule">runs-on</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">self</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">hosted</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token key atrule">steps</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> actions/checkout@v3</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Set up Node</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> actions/setup</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">node@v2</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">node-version</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token punctuation" style="color:rgb(212, 212, 212)">{</span><span class="token plain"> env.DEFAULT_NODE_VERSION </span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token punctuation" style="color:rgb(212, 212, 212)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Install dependencies</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> yarn install </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">immutable</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Check Unit Test Coverage</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token key atrule">run</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">|</span><span class="token scalar string" style="color:rgb(206, 145, 120)"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token scalar string" style="color:rgb(206, 145, 120)">          mkdir -p coverage</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token scalar string" style="color:rgb(206, 145, 120)">          yarn test:unit --coverage --config=jest.ci-config.ts | tee ./coverage/coverage.txt &amp;&amp; exit ${PIPESTATUS[0]}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> </span><span class="token key atrule">name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Jest Coverage Comment</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token key atrule">id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> coverageComment</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token key atrule">uses</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> MishaKav/jest</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">coverage</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">comment@main</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token key atrule">with</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">coverage-summary-path</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> ./coverage/coverage</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">summary.json</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">title</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Test Coverage</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">summary-title</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Coverage Report</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">badge-title</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Coverage</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">hide-comment</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">create-new-comment</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">hide-summary</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> </span><span class="token boolean important">false</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">junitxml-title</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Test Suites Summary</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">junitxml-path</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> ./coverage/junit.xml</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">coverage-title</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> Coverage</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">          </span><span class="token key atrule">coverage-path</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> ./coverage/coverage.txt</span><br></span></code></pre><div class="buttonGroup_UnaD"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_kuWh" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_tSTY"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_pknt"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>만약 가져다 사용하는 사람이 있다면 runs-on은 아마 바꿔야할 듯하다. 나는 github enterprise로 self-host를 띄우기에 저렇게 설정하였다.</p>
<p><code>Check Unit Test Coverage</code> step을 보면 <code>mkdir -p coverage</code> 는 tee command가 폴더가 없으면 파일을 만들지않기에 미리 만들어주는 것이다. <code>tee ./coverage/coverage.txt</code> 는 coverage script 돌고 나오는 마지막 summary table을 <code>coverage.txt</code> 파일에 입력시키는 명령어다.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="3-아주-작은-습관의-힘">3. 아주 작은 습관의 힘<a href="https://kooku0.github.io/journal/2023/07/26/#3-%EC%95%84%EC%A3%BC-%EC%9E%91%EC%9D%80-%EC%8A%B5%EA%B4%80%EC%9D%98-%ED%9E%98" class="hash-link" aria-label="3. 아주 작은 습관의 힘에 대한 직접 링크" title="3. 아주 작은 습관의 힘에 대한 직접 링크">​</a></h2>
<div class="theme-admonition theme-admonition-note admonition_zbkM alert alert--secondary"><div class="admonitionHeading_ZYze"><span class="admonitionIcon_Lqel"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>목표 따윈 쓰레기통에 던져버리기</div><div class="admonitionContent_Iunh"><p>흔히 원하는 것을 얻으려면 구체적으로 실행 가능한 목표를 세워야 한다고 말한다.</p><p>나 역시 습관에 대해 오랫동안 이런 관점에서 접근했다. 습관 하나하나는 곧 도달해야 할 구체적인 목표였다. 하지만 그런 목표들 중에서 성공한 것은 극히 일부였고 대부분 실패했다. 나는 내가 얻어낸 결과들이 처음에 세웠던 목표와는 거의 관계가 없고, 사실 모든 것은 시스템에 달려 있다는 것을 깨달았다.</p><p>시스템과 목표의 차이는 무엇일까? 목표는 우리가 얻어내고자 하는 결과이며, 시스템은 그 결과로 이끄는 과정이다.</p><ul>
<li>감독의 목표는 챔피언십을 획득하는 것이다. 그렇다면 시스템은 선수들을 선발하는 방식, 코치들을 다루는 방식, 실행하는 방식이다.</li>
<li>기업가의 목표는 수백만 달러짜리 사업을 세우는 것이다. 그렇다면 시스템은 제품이나 서비스에 대한 아이디어를 테스트하는 법, 직원을 고용하는 법이다.</li>
<li>악기 연주자의 목표는 새로운 곡을 연주하는 것이다. 그렇다면 시스템은 '몇 번 연습할 것인가, 어떻게 틀을 깨고 다른 방식으로 연주할 것인가, 배운 내용을 어떻게 나만의 것으로 소화할 것인가'가 된다.</li>
</ul><p>이제 흥미로운 질문을 해보자. 목표를 완전히 무시하고 오직 시스템에만 집중한다면 그래도 성공할까? 나는 '그렇다'고 생각한다. 어떤 스포츠든 목표는 최고의 점수를 달성하는 것이다. 하지만 그렇다고 해서 경기 내내 점수판만 응시하는 건 말도 안되는 짓이다. 실제로 승리할 유일한 방법은 매일 더 나아지는 것뿐이다.</p><p>더 나은 결과를 내고 싶다면 목표를 세우는 일은 잊어라. 대신 시스템에 집중하라. 목표가 무용지물이라는 말은 아니다. 목표는 방향을 설정하는 데 필요하며 시스템은 과정을 제대로 해나가는 데 필요하다. 그러나 목표를 생각하느라 너무 많은 시간을 들이고 시스템을 고안하는 데는 시간을 투자하지 않을 때 문제가 발생한다.</p><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="문제-1-성공한-사람도-성공하지-못한-사람도-목표는-같다">문제 1. 성공한 사람도, 성공하지 못한 사람도 목표는 같다.<a href="https://kooku0.github.io/journal/2023/07/26/#%EB%AC%B8%EC%A0%9C-1-%EC%84%B1%EA%B3%B5%ED%95%9C-%EC%82%AC%EB%9E%8C%EB%8F%84-%EC%84%B1%EA%B3%B5%ED%95%98%EC%A7%80-%EB%AA%BB%ED%95%9C-%EC%82%AC%EB%9E%8C%EB%8F%84-%EB%AA%A9%ED%91%9C%EB%8A%94-%EA%B0%99%EB%8B%A4" class="hash-link" aria-label="문제 1. 성공한 사람도, 성공하지 못한 사람도 목표는 같다.에 대한 직�접 링크" title="문제 1. 성공한 사람도, 성공하지 못한 사람도 목표는 같다.에 대한 직접 링크">​</a></h3><p>올림픽에 출전한 선수 모두가 금메달을 원한다. 입사 지원자 모두가 구직을 바란다. 성공한 사람도, 성공하지 못한 사람도 목표는 같다. 목표는 승자와 패자를 가르는 차이가 될 수 없다.</p><p>목표는 늘 거기에 있다. 결과에 차이가 생긴건 지속적으로 작은 개선들을 만들어내는 시스템을 시행한 것, 그뿐이였다.</p><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="문제-2-목표-달성은-일시적-변화일-뿐이다">문제 2. 목표 달성은 일시적 변화일 뿐이다.<a href="https://kooku0.github.io/journal/2023/07/26/#%EB%AC%B8%EC%A0%9C-2-%EB%AA%A9%ED%91%9C-%EB%8B%AC%EC%84%B1%EC%9D%80-%EC%9D%BC%EC%8B%9C%EC%A0%81-%EB%B3%80%ED%99%94%EC%9D%BC-%EB%BF%90%EC%9D%B4%EB%8B%A4" class="hash-link" aria-label="문제 2. 목표 달성은 일시적 변화일 뿐이다.에 대한 직접 링크" title="문제 2. 목표 달성은 일시적 변화일 뿐이다.에 대한 직접 링크">​</a></h3><p>지저분한 방이 있다고 생각해보라. 방을 치우기로 목표를 세운다. 그리고 당장 청소하는 데 필요한 에너지를 끌어올려 방을 치웠다. 하지만 대충대충 청소하거나 뭐든 잘 버리지 못하는 사람이라면 방은 또 지저분해질 것이다. 계속 같은 결과가 나타난다는 것은 이런 결과의 배경이 된 시스템을 바꾸지 못했기 때문이다. 원인을 다루지 않고 증상만을 치유한 것이다.</p><p>목표를 달성하는 것은 우리 인생의 '한순간'을 변화시킬 뿐이다. 이는 '개선'과는 다르다. 우리는 결과를 바꿔야 한다고 생각하지만 사실 그 결과는 문제가 아니다. 진짜로 해야 할 일은 결과를 유발하는 시스템을 바꾸는 것이다. 결과 수준에서 문제를 해결하려고 하면 이는 임시방편일 뿐이다. 영원히 개선하고자 한다면 결과가 아니라 시스템 단계에서 문제를 해결해야 한다.</p><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="문제-3-목표는-행복을-제한한다">문제 3. 목표는 행복을 제한한다.<a href="https://kooku0.github.io/journal/2023/07/26/#%EB%AC%B8%EC%A0%9C-3-%EB%AA%A9%ED%91%9C%EB%8A%94-%ED%96%89%EB%B3%B5%EC%9D%84-%EC%A0%9C%ED%95%9C%ED%95%9C%EB%8B%A4" class="hash-link" aria-label="문제 3. 목표는 행복을 제한한다.에 대한 직접 링크" title="문제 3. 목표는 행복을 제한한다.에 대한 직접 링크">​</a></h3><p>목표 뒤에는 이런 가정이 내포되어 있다. '목표에 도달하면 행복해질 거야' 목표를 우선으로 생각하는 태도의 문제는 다음 표지판에 도달할 때까지 행복을 계속 미룬다는 것이다. 나는 수없이 이런 함정에 빠져 내가 뭘 하는지 잊곤 했다. 수년 동안 나에게 행복이란 미래에 있는 것이었다.</p><p>목표는 '이것 아니면 저것'이라는 양자택일적 갈등을 만들어낸다. 목표를 달성하면 성공하는 것이고, 달성하지 못하면 실패하는 것이라고 말이다. 실제 삶의 행로는 우리가 마음속으로 정해놓은 여정과 정확히 일치하지 않는다. 성공으로 가는 길은 수없이 많다. 굳이 하나의 시나리오에만 자신의 길을 맞출 이유는 없다.</p><p>시스템 우선주의는 그 해독제를 제공한다. 결과가 아니라 과정을 좋아하게 되면 '이제 행복해져도 돼'라고 말할 시기를 기다리지 않아도 된다. 시스템이 작동하고 있다면 어느 때건 만족할 수 있기 떄문이다. 시스템은 우리가 처음 상상했던 한 가지 결과가 아니라 다양한 형태로 성공할 수 있게 해준다.</p><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="문제-4-목표와-장기적-발전은-다르다">문제 4. 목표와 장기적 발전은 다르다.<a href="https://kooku0.github.io/journal/2023/07/26/#%EB%AC%B8%EC%A0%9C-4-%EB%AA%A9%ED%91%9C%EC%99%80-%EC%9E%A5%EA%B8%B0%EC%A0%81-%EB%B0%9C%EC%A0%84%EC%9D%80-%EB%8B%A4%EB%A5%B4%EB%8B%A4" class="hash-link" aria-label="문제 4. 목표와 장기적 발전은 다르다.에 대한 직접 링크" title="문제 4. 목표와 장기적 발전은 다르다.에 대한 직접 링크">​</a></h3><p>마지막으로 목표 중심적 사고방식은 '요요 현상'을 불러올 수 있다. 달기기 선수들은 경기가 있으면 몇 달 동안 열심히 운동한 끝에 결승선을 통과한다. 그리고 당분간은 훈련을 멈춘다. 이미 끝난 경기는 더 이상 동기를 자극하지 않는 것이다.</p><p>특정한 목표를 이루기 위해 노력했다면, 그것을 달성한 뒤에 무엇이 남아 우리를 앞으로 나아가게 할까? 이 때문에 많은 사람이 목표를 달성하고 나면 과거의 습관으로 쉽게 돌아가곤 한다.</p><p>목표 설정의 목적은 게임에서 이기는 것이다. 반면 시스템 구축의 목적은 게임을 계속 해나가는 것이다. 장기적으로 발전하기 위해서는 목표 설정보다는 시스템을 구축해야 한다. 성취하는 것이 아니라 계속해서 개선하고 발전해나가는 순환 고리를 만드는 것이다. 즉, '과정'에 전념하는 것이 '발전'을 결정한다.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="4-와인-앱">4. 와인 앱<a href="https://kooku0.github.io/journal/2023/07/26/#4-%EC%99%80%EC%9D%B8-%EC%95%B1" class="hash-link" aria-label="4. 와인 앱에 대한 직접 링크" title="4. 와인 앱에 대한 직접 링크">​</a></h2>
<p>크롤링한 데이터를 전부 firestore에 업로드 하였다. firestore 사용량 제한이 있어서 한 번에 모두 업로드는 못하고 3~4일에 거쳐서 모두 업로드 했다. 총 28,523 개로 vivino, wine21 collection을 따로 해서 저장했다. 대략 55000 write를 했다.</p>
<p>참고로 firestore 의 경우 쓰기 2만/day, 읽기 5만/day, 삭제 2/day 까지 무료다. blaze 플랜으로 업그레이드하면 무료 사용량 초과한 만큼 비용이 발생한다.</p>
<p>이제 검색기능을 만들 차례다!</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.07.22]]></title>
        <id>https://kooku0.github.io/journal/2023/07/22/</id>
        <link href="https://kooku0.github.io/journal/2023/07/22/"/>
        <updated>2023-07-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 일상]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-일상">0. 일상<a href="https://kooku0.github.io/journal/2023/07/22/#0-%EC%9D%BC%EC%83%81" class="hash-link" aria-label="0. 일상에 대한 직접 링크" title="0. 일상에 대한 직접 링크">​</a></h2>
<ul>
<li>"타이탄의 도구들" 책은 거의 다읽었고 "아주 작은 습관의 힘" 책을 사서 보고있는 중이다. 이건 e 북으로 사서 리브2로 보는중. "타이탄의 도구들" 책은 또 한 번 읽고 싶다. 인생에 대한 생각과 행동을 많이 바꿔준 책이다.</li>
<li>아! 저번 일기 때 말한 테스트관련된 건 동료분들께 공유했고 원레포 통합되면 테스트를 적극 도입하기로 했다. 얏호~ 🥳</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-github-enterprise로-옮기고-actions-트러블-슈팅">1. GitHub Enterprise로 옮기고 Actions 트러블 슈팅<a href="https://kooku0.github.io/journal/2023/07/22/#1-github-enterprise%EB%A1%9C-%EC%98%AE%EA%B8%B0%EA%B3%A0-actions-%ED%8A%B8%EB%9F%AC%EB%B8%94-%EC%8A%88%ED%8C%85" class="hash-link" aria-label="1. GitHub Enterprise로 옮기고 Actions 트러블 슈팅에 대한 직접 링크" title="1. GitHub Enterprise로 옮기고 Actions 트러블 슈팅에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="좋은점">좋은점<a href="https://kooku0.github.io/journal/2023/07/22/#%EC%A2%8B%EC%9D%80%EC%A0%90" class="hash-link" aria-label="좋은점에 대한 직접 링크" title="좋은점에 대한 직접 링크">​</a></h3>
<ul>
<li>public github보다 runner 성능이 좋아 엄청 빠르다.</li>
<li>인스턴스에 한 번 설치되면 인스턴스 날라가지 않는 이상 재설치가 필요없어져서 속도가 빠르다.<!-- -->
<ul>
<li>playwright는 테스트 돌리기전 browser를 설치해야하는데 public github에서는 크로미움 하나 설치하는데 30s 걸리는데 GHES에서는 4s 걸린다.</li>
</ul>
</li>
<li>전체적인 속도는 1m 30s ~ 2m 30s -&gt; 30s 로 줄어들었다.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="안좋은-점">안좋은 점<a href="https://kooku0.github.io/journal/2023/07/22/#%EC%95%88%EC%A2%8B%EC%9D%80-%EC%A0%90" class="hash-link" aria-label="안좋은 점에 대한 직접 링크" title="안좋은 점에 대한 직접 링크">​</a></h3>
<ul>
<li>runner 개수가 한정되어 있어 여러 프로젝트가 actions를 동시에 돌리면 queue에서 오래 pending되는 경우가 많다.</li>
<li>os에 영향을 받는 actions이 있다.<!-- -->
<ul>
<li>사용중인 runner의 os가 <code>Amazon Linux 2</code> 인데 playwright 설치시 문제가 생겼다. <code>BEWARE: your OS is not officially supported by Playwright; installing dependencies for Ubuntu as a fallback.</code> ubuntu가 설치된 runner를 추가하여 문제를 해결했다.</li>
</ul>
</li>
<li>새로운 actions를 사용하려면 인프라팀에 요청해서 actions를 동기화해주는 작업이 필요하다.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="트러블-슈팅한-거">트러블 슈팅한 거<a href="https://kooku0.github.io/journal/2023/07/22/#%ED%8A%B8%EB%9F%AC%EB%B8%94-%EC%8A%88%ED%8C%85%ED%95%9C-%EA%B1%B0" class="hash-link" aria-label="트러블 슈팅한 거에 대한 직접 링크" title="트러블 슈팅한 거에 대한 직접 링크">​</a></h3>
<ul>
<li>playwright 테스트가 예전에는 동작했는데 갑자기 실패하는 경우가 생겼다. 그런데 테스트나 설정의 문제는 아니였고 runner의 문제였는데(예전에 제대로 동작한 action을 재수행해도 에러가 났다) 인프라팀과 컴을 하면 문제를 파악할 수 있겠지만 시간이 걸려 docker를 도입하는 걸로 문제를 해결했다. 시간은 30s 에서 1m 로 늘어났지만 docker를 통해 안정적인 환경을 구축한 것에 만족한다.</li>
<li>github actions 에서 docker 설치해서 돌리는게 매우 쉽다. 요렇게만 해주면 된다.<!-- -->
<div class="language-yaml codeBlockContainer_izg7 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_moPJ"><pre tabindex="0" class="prism-code language-yaml codeBlock_w9zt thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_opl_"><span class="token-line" style="color:#9CDCFE"><span class="token plain">  </span><span class="token key atrule">jobs</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token key atrule">test</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">      </span><span class="token key atrule">container</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token key atrule">image</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain"> mcr.microsoft.com/playwright</span><span class="token punctuation" style="color:rgb(212, 212, 212)">:</span><span class="token plain">v1.32.1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">-</span><span class="token plain">jammy</span><br></span></code></pre><div class="buttonGroup_UnaD"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_kuWh" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_tSTY"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_pknt"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
</li>
<li>github action docker container 내에서는 github cache를 사용할 수 없다. cache가 저장되어 있어도 cache hit이 안된다. -&gt; caching을 docker container 환경과 동일하게 맞추고 하니 된다.</li>
<li>github action runner 내에서 직접 (chromium만 설치)browser를 설치하면 38s 걸리는데 docker install을 하면 모든 브라우저가 설치된 docker image인데도 47s 걸린다.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-타이탄의-도구들">2. 타이탄의 도구들<a href="https://kooku0.github.io/journal/2023/07/22/#2-%ED%83%80%EC%9D%B4%ED%83%84%EC%9D%98-%EB%8F%84%EA%B5%AC%EB%93%A4" class="hash-link" aria-label="2. 타이탄의 도구들에 대한 직접 링크" title="2. 타이탄의 도구들에 대한 직접 링크">​</a></h2>
<p>타이탄의 도구들 완독 🥳🥳🥳</p>
<div class="theme-admonition theme-admonition-note admonition_zbkM alert alert--secondary"><div class="admonitionHeading_ZYze"><span class="admonitionIcon_Lqel"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>타이탄의 도구들</div><div class="admonitionContent_Iunh"><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="3-07-실력을-키울-생각이-없으면-포기하라">3-07 실력을 키울 생각이 없으면 포기하라<a href="https://kooku0.github.io/journal/2023/07/22/#3-07-%EC%8B%A4%EB%A0%A5%EC%9D%84-%ED%82%A4%EC%9A%B8-%EC%83%9D%EA%B0%81%EC%9D%B4-%EC%97%86%EC%9C%BC%EB%A9%B4-%ED%8F%AC%EA%B8%B0%ED%95%98%EB%9D%BC" class="hash-link" aria-label="3-07 실력을 키울 생각이 없으면 포기하라에 대한 직접 링크" title="3-07 실력을 키울 생각이 없으면 포기하라에 대한 직접 링크">​</a></h3><h4 class="anchor anchorWithStickyNavbar_H2Uu" id="꿈보다-목표가-중요하다">꿈보다 목표가 중요하다<a href="https://kooku0.github.io/journal/2023/07/22/#%EA%BF%88%EB%B3%B4%EB%8B%A4-%EB%AA%A9%ED%91%9C%EA%B0%80-%EC%A4%91%EC%9A%94%ED%95%98%EB%8B%A4" class="hash-link" aria-label="꿈보다 목표가 중요하다에 대한 직접 링크" title="꿈보다 목표가 중요하다에 대한 직접 링크">​</a></h4><p>꿈은 일어나지 않을지도 모르는 일을 그냥 상상하는 것이다. 하지만 목표는 그걸 이루기 위한 구체적인 계획을 세우고 열심히 노력해 마침내 이루는 것이다. 내게 성공의 본보기가 되어주는 사람들은 모두 조직적인 목표를 갖고 이를 달성하기 위한 탁월한 계획을 세우는 사람들이다.</p><h4 class="anchor anchorWithStickyNavbar_H2Uu" id="오늘-밤은-그냥-보여주는-것뿐이다">오늘 밤은 그냥 보여주는 것뿐이다.<a href="https://kooku0.github.io/journal/2023/07/22/#%EC%98%A4%EB%8A%98-%EB%B0%A4%EC%9D%80-%EA%B7%B8%EB%83%A5-%EB%B3%B4%EC%97%AC%EC%A3%BC%EB%8A%94-%EA%B2%83%EB%BF%90%EC%9D%B4%EB%8B%A4" class="hash-link" aria-label="오늘 밤은 그냥 보여주는 것뿐이다.에 대한 직접 링크" title="오늘 밤은 그냥 보여주는 것뿐이다.에 대한 직접 링크">​</a></h4><p>내 일은 오늘 밤에 끝나는 게 아니다. 벌써 3개월 전에 끝났다. 오늘 밤은 그냥 보여주는 것뿐이다.</p><p>'내가 잘하지 못함에도 계속하고 있는 일은 무엇일까?' 한 달에 한 번, 분기에 한 번, 이 질문을 스스로에게 던질 때 당신과 나는 한 걸음 앞으로 나갈 수 있게 될 것이다.</p><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="3-08-생각을-쉬게-하라">3-08 생각을 쉬게 하라<a href="https://kooku0.github.io/journal/2023/07/22/#3-08-%EC%83%9D%EA%B0%81%EC%9D%84-%EC%89%AC%EA%B2%8C-%ED%95%98%EB%9D%BC" class="hash-link" aria-label="3-08 생각을 쉬게 하라에 대한 직접 링크" title="3-08 생각을 쉬게 하라에 대한 직접 링크">​</a></h3><h4 class="anchor anchorWithStickyNavbar_H2Uu" id="상상력을-펼쳐라">상상력을 펼쳐라<a href="https://kooku0.github.io/journal/2023/07/22/#%EC%83%81%EC%83%81%EB%A0%A5%EC%9D%84-%ED%8E%BC%EC%B3%90%EB%9D%BC" class="hash-link" aria-label="상상력을 펼쳐라에 대한 직접 링크" title="상상력을 펼쳐라에 대한 직접 링크">​</a></h4><p>우리가 매일 정신적으로 지치는 중요한 이유들 중 하나는, 너무 이성적으로 살아가려고 노력하기 때문이다. 언제나 우리는 '옳고 합리적이고 타당한 것'을 찾는 데 익숙하게 골몰한다. 그러다 보니 정신은 '딴 짓을 할 시간'을 전혀 갖지 못한다. 지치는 건 당연하다.
지치고 피곤할 때는 테트리스를 하라. 그리고 딴 생각. 내가 할 수 있는 가장 말도 되지 않는 생각을 떠올리며 웃어라.</p><h4 class="anchor anchorWithStickyNavbar_H2Uu" id="타인을-비난�하지-마라">타인을 비난하지 마라<a href="https://kooku0.github.io/journal/2023/07/22/#%ED%83%80%EC%9D%B8%EC%9D%84-%EB%B9%84%EB%82%9C%ED%95%98%EC%A7%80-%EB%A7%88%EB%9D%BC" class="hash-link" aria-label="타인을 비난하지 마라에 대한 직접 링크" title="타인을 비난하지 마라에 대한 직접 링크">​</a></h4><p>정신건강을 위한 또다른 습관으로 '공개적인 비난을 삼가할 것'을 주문한다. 타인을 비난하는 것은 우리가 가장 중독되기 쉬운 나쁜 습관이다. 내가 내밷은 부정적인 말은 누군가의 하루를 망치거나 그의 마음에 깊이 상처를 내는 데서 그치지 않는다.
상대를 비난하는 순간, 내 마음과 시간에도 상처가 생겨난다. 다만 우리는 그것을 의식하지 못할 뿐이다.</p><p>"타인을 공격할 때마다 우리는 한 명 한 명 내 목숨을 구해줄 수도 있는 귀한 사람들을 잃는다. 세상에 그것보다 더 큰 상처와 실패는 없다. 낯선 사람을 따뜻하게 맞이하라. 그난 변장을 한 채 자신을 찾아온 천사일지도 모르니까 말이다."</p><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="3-09-아무것도-하지-않는-즐거움을-찾아라">3-09 아무것도 하지 않는 즐거움을 찾아라<a href="https://kooku0.github.io/journal/2023/07/22/#3-09-%EC%95%84%EB%AC%B4%EA%B2%83%EB%8F%84-%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EC%A6%90%EA%B1%B0%EC%9B%80%EC%9D%84-%EC%B0%BE%EC%95%84%EB%9D%BC" class="hash-link" aria-label="3-09 아무것도 하지 않는 즐거움을 찾아라에 대한 직접 링크" title="3-09 아무것도 하지 않는 즐거움을 찾아라에 대한 직접 링크">​</a></h3><h4 class="anchor anchorWithStickyNavbar_H2Uu" id="팀-크라이더의-이야기">팀 크라이더의 이야기<a href="https://kooku0.github.io/journal/2023/07/22/#%ED%8C%80-%ED%81%AC%EB%9D%BC%EC%9D%B4%EB%8D%94%EC%9D%98-%EC%9D%B4%EC%95%BC%EA%B8%B0" class="hash-link" aria-label="팀 크라이더의 이야기에 대한 직접 링크" title="팀 크라이더의 이야기에 대한 직접 링크">​</a></h4><p>바쁜 사람은 뭔가 중요한 일을 하는 사람처럼 보인다. 그래서 그에 대한 반응 역시 축하의 의미다.
바쁘다면서 탄식하는 사람들은 자진해서 바쁜 경우가 대부분이다. 그들이 바쁜 이유는 바쁨에 중독되어 있으며 바쁘지않게 될까봐 몹시 두려워한다.
내가 아는 거의 모든 사람이 바쁘다. 그들은 일하지 않을 때는 불안과 죄책감을 느낀다.
바쁨은 인생에 필수적이거나 불가피한 상태가 아니다. 그것은 자신이 선택한 상황이며 묵묵히 따라야만 가능하다.</p><p>물론 모두가 바쁜건 사실이다. 하지만 우리는 스스로에게 질문을 던져야 한다.
'나는 지금 정확히 무슨 일을 하고 있는가?'라고.
정신없이 바빠 회의에 늦고, 전화기에 대고 소리 지르지만 정녕 말라리아를 없애거나 화석 연료의 대체 에너지를 개발하고, 아름다운 작품을 만드느라고 바쁜 것인가?
바쁨은 존재의 확인이자 공허함을 막아주는 울타리 역할을 한다.</p><p>세상에 몰입하지 않은 채로 글의 소재를 찾기는 힘들지만, 세상에서 벗어나지 않으면 소재에 대해 깊이 생각해보고 가장 잘 표현할 수 있는 방법을 찾을 수 없다.</p><p>제한된 시간을 가장 훌륭하게 투자하는 방법은 사랑하는 사람들과 보내는 것이라는 사실을 알고 있다.
인생은 바쁘게 살기에는 너무 짧다.</p><h3 class="anchor anchorWithStickyNavbar_H2Uu" id="3-10-단-하나의-결단">3-10 단 하나의 결단<a href="https://kooku0.github.io/journal/2023/07/22/#3-10-%EB%8B%A8-%ED%95%98%EB%82%98%EC%9D%98-%EA%B2%B0%EB%8B%A8" class="hash-link" aria-label="3-10 단 하나의 결단에 대한 직접 링크" title="3-10 단 하나의 결단에 대한 직접 링크">​</a></h3><p>우리는 나이가 들어서까지 어리석으면 안되며, 좌절해서도 안된다. 뭔가 잘 안풀릴 때는 처음부터 다시 점검하고, 나보다 더 현명하고 지혜로운 사람에게 조언을 얻어야 한다. 소머 코치는 "승자가 되려면 가장 쉬운 것부터 시작하라"고 말한다. "반드시 천천히 하라, 서두르지 마라"고도 말한다.
가장 쉬운 것부터 시작했음에도, 천천히 서두르지 않고 연습했음에도 성과가 지지부진하다면, 소머의 '단 하나의 결단'에 대한 조언이 강력한 효과를 발휘할 것이다.</p><blockquote>
<p>친애하는 팀에게.</p>
<p>눈에 보이는 발전이 없을 때 나타나는 좌절감은 탁월함을 향해 나가는 과정에서 필수불가결한 일입니다. 좌절감을 느끼지 못하는 사람은 아무것도 배우지 못하니까요. 탁월함을 추구하는 게 쉽다면 누구나 할 수 있을 겁니다.
그러니 괴로워할 일이 아닙니다. 제대로 된 길을 가고 있는지를 점검하는 좋은 기회입니다.</p>
<p>우리가 샐패하는 건 좌절감 때문이 아닙니다. '조급함' 때문이죠. 좌절감과 싸우는 동안 조급함을 느끼기 때문에 대부분의 사람들이 목표 달성에 실패합니다. 우리가 알아야 할 것은 우리가 걷고 있는 탁월함의 길이 곧장 뻗은 '직선'이 아니라는 것입니다.
우리는 한지점에서 다른 한 지점으로 가장 빨리 가는 직선을 그리기 위해 조급함과 초조함을 안고 삽니다. 하지만 비범한 성과는 이 직선 위해서는 만날 수 없습니다. 가장 빨리 결승선을 통과하는 사람은 가장 많은 거리를 뛰어온 사람이기 때문입니다.
우리가 좌절감, 초조함, 조급함을 극복하는 비결은 간단합니다. 일터에 가서 일을 하고, 집에 가서 휴식을 취하는 것입니다. 그러면서 일단 결심을 한 것은 절대 그 생각을 의심하거나, 바꾸지 않는 것입니다. 타협하지도 말고요.</p>
<p>눈에 띄는 진전이 없다는 것은 아마도 많은 것을 생각하고 행했기 때문일 겁니다. 다시 말해 집중해야 할 대상이 많아져서 집중을 하지 못하는 역설적 상황을 맞았기 때문일 겁니다.</p>
<p>명심하세요, 드라마 같은 일은 벌어지지 않습니다. 길을 걷다가 작게 튀어나온 돌부리에 발이 걸렸다고 해서 자책할 일도 아니고, 뭔가 새로운 일이 생길 것이라고 기대할 일도 아니라는 겁니다. 당신의 심플하지만 단단한 루틴과 습관을 계속해 나가야 합니다.
그러면 당신의 자세와 걸음걸이를 살펴보며 현명한 조언을 해주는 사람이 나타날 수 있습니다. 아마 목표를 이루는 데 필요한 행운은 여기까지일 겁니다.
발전과 성과가 없다고 해서 자꾸만 자세를 바꾸고, 생각을 고치고, 이것저것 다 해보는 사람에겐 좋은 조언자가 나타나지 않습니다. 너무 변화무쌍하니까요.
정해진 일정 같은 건 잊어버리세요. 시간은 필요한 만큼 걸릴 겁니다.</p>
<p>일련의 작은 중간 목표가 아니라 장기적인 목표를 이루기 위해 노력한다면 당신이 결정하고 지켜야 할 일은 한 가지뿐입니다. 명확하고 단순하면서 직설적이죠. 매 단계를 거칠 때마다 궤도를 벗어나지 않기 위해 작은 결심들을 하고 또 하는 것보다, 단 하나의 큰 결단을 유지하는 게 훨씬 쉽습니다. 작은 결심을 계속 하는 경우에는 당신이 선택한 목표를 무심코 벗어나서 표류할 기회가 너무 많아집니다.</p>
<p>'단 하나의 결단'은 우리가 가진 것들 중에서 가장 강력한 힘을 발휘하는 도구입니다.</p>
</blockquote></div></div>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="3-vs-code-자동-import">3. VS Code 자동 import<a href="https://kooku0.github.io/journal/2023/07/22/#3-vs-code-%EC%9E%90%EB%8F%99-import" class="hash-link" aria-label="3. VS Code 자동 import에 대한 직접 링크" title="3. VS Code 자동 import에 대한 직접 링크">​</a></h2>
<p>타입스크립트에는 파일에 대한 접근제어가 불가능하다. spring 같은걸 보면 상단에 package.* 같은걸 추가해서 패키지별 폴더별 접근이 가능하다. 해당 파일을 정말 추상화를 한거라 일부 파일에서만 가져다 사용하게 제한하고 싶은데 그게 안되어 여러 사람들이 무분별하게 가져다 사용할 수도 있고 여러 파일들이 같은 이름의 함수명을 가지고 있을 때 실수할 수도 있다.</p>
<p>완벽한 해결책은 아니지만 어느정도 해결할 수 있는 방법을 찾았다.</p>
<p>vscode setting을 통해 autoImport를 막을 수는 있네요 <a href="https://github.com/microsoft/vscode/pull/153160" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/vscode/pull/153160</a></p>
<blockquote>
<p>이를 구현하기 위한 TS Server option pr: <a href="https://github.com/microsoft/TypeScript/pull/49578" target="_blank" rel="noopener noreferrer">https://github.com/microsoft/TypeScript/pull/49578</a></p>
</blockquote>
<div class="language-json codeBlockContainer_izg7 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_moPJ"><pre tabindex="0" class="prism-code language-json codeBlock_w9zt thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_opl_"><span class="token-line" style="color:#9CDCFE"><span class="token plain">"typescript.preferences.autoImportFileExcludePatterns": [</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  "__mocks__"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup_UnaD"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_kuWh" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_tSTY"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_pknt"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="셋팅하지-않았을-때">셋팅하지 않았을 때<a href="https://kooku0.github.io/journal/2023/07/22/#%EC%85%8B%ED%8C%85%ED%95%98%EC%A7%80-%EC%95%8A%EC%95%98%EC%9D%84-%EB%95%8C" class="hash-link" aria-label="셋팅하지 않았을 때에 대한 직접 링크" title="셋팅하지 않았을 때에 대한 직접 링크">​</a></h4>
<img src="https://kooku0.github.io/assets/images/auto-import-exclude-01-ae0581be52fa7c286a71241f67321f2f.png">
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="__mocks__-autoimportexclude-했을-때"><code>__mocks__</code> autoImportExclude 했을 때<a href="https://kooku0.github.io/journal/2023/07/22/#__mocks__-autoimportexclude-%ED%96%88%EC%9D%84-%EB%95%8C" class="hash-link" aria-label="__mocks__-autoimportexclude-했을-때에 대한 직접 링크" title="__mocks__-autoimportexclude-했을-때에 대한 직접 링크">​</a></h4>
<img src="https://kooku0.github.io/assets/images/auto-import-exclude-02-882f325a1a3cc2f10faf9080b76bd106.png">]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.07.20]]></title>
        <id>https://kooku0.github.io/journal/2023/07/20/</id>
        <link href="https://kooku0.github.io/journal/2023/07/20/"/>
        <updated>2023-07-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 일상]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-일상">0. 일상<a href="https://kooku0.github.io/journal/2023/07/20/#0-%EC%9D%BC%EC%83%81" class="hash-link" aria-label="0. 일상에 대한 직접 링크" title="0. 일상에 대한 직접 링크">​</a></h2>
<p>요즘 여유가 없다. 인심은 곳간에서 나온다는 말이 진짜 맞다. 내가 항상 스트레스 받고 있으니 누군가를 이해하기도 이해하며 말하기도 힘들다. 너무 에너지가 소모되는 것 같다. 휴가를 쓰면서 리프레시를 좀 해야할 것 같다.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-wset-와인수업">1. WSET 와인수업<a href="https://kooku0.github.io/journal/2023/07/20/#1-wset-%EC%99%80%EC%9D%B8%EC%88%98%EC%97%85" class="hash-link" aria-label="1. WSET 와인수업에 대한 직접 링크" title="1. WSET 와인수업에 대한 직접 링크">​</a></h2>
<p>어제 첫 수업을 들었다. 국비지원은 출결체크가 너무 빡쎄다 ㅠㅠ 앱도 진짜 안좋아서 비콘으로 출결하려면 맨날 인증서 로그인해야한다 ㅠㅠ (출석전, 출석후) 그냥 카드로 출결체크하는게 젤 마음편한 것 같다.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-여름휴가나-다녀와야지">2. 여름휴가나 다녀와야지~<a href="https://kooku0.github.io/journal/2023/07/20/#2-%EC%97%AC%EB%A6%84%ED%9C%B4%EA%B0%80%EB%82%98-%EB%8B%A4%EB%85%80%EC%99%80%EC%95%BC%EC%A7%80" class="hash-link" aria-label="2. 여름휴가나 다녀와야지~에 대한 직접 링크" title="2. 여름휴가나 다녀와야지~에 대한 직접 링크">​</a></h2>
<p>이전 일기에서 테스트에 대해 이야기 한적이 있는데 오늘 지하철을 타고 출근하다가 다시 고민에 빠졌다. 나는 테스트를 좋아하고 작성해야하는 중요성을 매우 잘 인지하고 있다. 그런데 요즘 내가 조금 바뀐 것 같다는 느낌이 들었다. 팀원들이 아무도 테스트코드를 작성하지 않으니 어느순간 나도 테스트코드 작성 안하는 것에 대해서 이질감을 안느끼기 시작한 것이다. 예전에는 테스트코드 작성안하면 매우 찝찝해 했고 두려웠는데 그게 없어지고 있는 거였다. 내가 지난 1년간 공들여서 들인 습관이 없어지고 있었다.</p>
<p>클린코더 라던가 소프트웨어 공학 책을 보면 항상 우리는 최고의 소프트웨어 품질을 위해 맞서 싸워야한다고 적혀있다. 하지만 현실은 그와 다르다면서 팀원들과 타협했고 이후에 스스로와도 타협을 해버렸다. 이러면 안되는데 이러면 진짜 안되는데 어떤게 옳은건지 알지만 타협을 한 번 해버리니 한도끝도 없이 늘어져 버렸다.</p>
<p>누군가를 설득시키기에는 너무 큰 노력이 필요하고 나도 매우 많은 에너지가 필요하다. 하지만 지금은 그럴 에너지가 없기에 재충전의 시간이 필요한 것 같다. 여름 휴가나 다녀와야지~</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.07.18]]></title>
        <id>https://kooku0.github.io/journal/2023/07/18/</id>
        <link href="https://kooku0.github.io/journal/2023/07/18/"/>
        <updated>2023-07-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 일상]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-일상">0. 일상<a href="https://kooku0.github.io/journal/2023/07/18/#0-%EC%9D%BC%EC%83%81" class="hash-link" aria-label="0. 일상에 대한 직접 링크" title="0. 일상에 대한 직접 링크">​</a></h2>
<ul>
<li>써야지 하다가 안써벼렸다. 일기에 적는건 출퇴근하다가 일하다 쉬다가 머릿속에서 생각한 것들인데 이걸 타이핑하기가 너무 귀찮다 ㅋㅋ 생각하면 알아서 타이핑되면 좋겠다 ㅋㅋ</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-와인앱-근황-mlkit">1. 와인앱 근황 mlkit<a href="https://kooku0.github.io/journal/2023/07/18/#1-%EC%99%80%EC%9D%B8%EC%95%B1-%EA%B7%BC%ED%99%A9-mlkit" class="hash-link" aria-label="1. 와인앱 근황 mlkit에 대한 직접 링크" title="1. 와인앱 근황 mlkit에 대한 직접 링크">​</a></h2>
<ul>
<li>와인앱은 mlkit을 이용해서 와인 상품명을 읽어들이는 작업을 진행중이다. 생각보다 인식률이 좋아서 나름 만족한다.</li>
</ul>
<img src="https://kooku0.github.io/assets/images/popo_mlkit-a81ea938590b281ec4ff1c4a5eeba765.jpg" width="300">
<ul>
<li>카메라 layout을 대폭 축소시키고 인식시킨 글자를 클릭해서 검색하도록만 하면 1차 mvp는 끝난다! 할께 많네..</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-챕터-일감을-만들-때-어떤걸-고려해야-하나">2. 챕터 일감을 만들 때 어떤걸 고려해야 하나?<a href="https://kooku0.github.io/journal/2023/07/18/#2-%EC%B1%95%ED%84%B0-%EC%9D%BC%EA%B0%90%EC%9D%84-%EB%A7%8C%EB%93%A4-%EB%95%8C-%EC%96%B4%EB%96%A4%EA%B1%B8-%EA%B3%A0%EB%A0%A4%ED%95%B4%EC%95%BC-%ED%95%98%EB%82%98" class="hash-link" aria-label="2. 챕터 일감을 만들 때 어떤걸 고려해야 하나?에 대한 직접 링크" title="2. 챕터 일감을 만들 때 어떤걸 고려해야 하나?에 대한 직접 링크">​</a></h2>
<p>챕터 일에는 3종류가 있다.</p>
<ol>
<li>지금 당장 중요해서 해야하는 일</li>
<li>나중에 중요해서 토대를 닦는 일 혹은 나중에 크게 도움될 작은 변화들</li>
<li>내가 하고싶은 일</li>
</ol>
<p>당연하겠지만 1 &gt; 2 &gt; 3 순서로 중요하다. 특히 3은 팀원들과 논의도 해야한다. 내가 하고싶은 일이 정말로 도움이 되는지 장기적으로 바라봐야하며 현재의 문제를 해결할 수 있는 일인지도 검토해야 한다. 단순 욕구로 일을 해서는 안되고 객관적으로 바라보고 평가해야한다. 실무에서 개발하는 코드는 테스트배드가 아니다.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="3-팀에-변화를-일으키는건-영향이-크다-우리는-roi를-고려해야-한다">3. 팀에 변화를 일으키는건 영향이 크다. 우리는 ROI를 고려해야 한다.<a href="https://kooku0.github.io/journal/2023/07/18/#3-%ED%8C%80%EC%97%90-%EB%B3%80%ED%99%94%EB%A5%BC-%EC%9D%BC%EC%9C%BC%ED%82%A4%EB%8A%94%EA%B1%B4-%EC%98%81%ED%96%A5%EC%9D%B4-%ED%81%AC%EB%8B%A4-%EC%9A%B0%EB%A6%AC%EB%8A%94-roi%EB%A5%BC-%EA%B3%A0%EB%A0%A4%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4" class="hash-link" aria-label="3. 팀에 변화를 일으키는건 영향이 크다. 우리는 ROI를 고려해야 한다.에 대한 직접 링크" title="3. 팀에 변화를 일으키는건 영향이 크다. 우리는 ROI를 고려해야 한다.에 대한 직접 링크">​</a></h2>
<ul>
<li>당근에 와서 내가 변화를 일으키려고 노력했던게 여러개 있다. 몇 개는 받아들여졌지만 (내가 담당하는 프로젝트 한정) 그렇지 못한것들도 많다. 가장 큰게 유닛테스트인데 여기에 대해 이야기 해보고자 한다. 프로젝트에 테스트를 도입하는건 매우 큰 변화다. 팀원들이 테스트에 대한 중요성은 알지만 경험이 없기에 보통 이런 변화를 별로 달가워하지 않는다. 왜냐하면 "우리 테스트코드를 짜기로 하자!" 정하게 되면 단순히 그렇게 따르는 것 보다 더 큰 노력이 필요하기 때문이다. 여기서 노력은 테스트에 대한 경험이 없기 때문에 따로 시간을 내어 공부하는 노력, 코드를 수정했는데 테스트 코드가 깨졌고 이걸 수정하기 위해 트러블슈팅하기 위한 노력등이다. "우리 디렉터리구조를 이렇게 가져가자!" 를 정하는 것과는 결이 다르다. 들이는 노력이 다르다. 그냥 그렇게 하면되는게 아니라 개인의 시간과 노력이 많이 들어가기 때문이다.</li>
</ul>
<p>어쩌면 지금까지 테스트코드 없이 개발을 해왔고 거기에 대해 큰 문제가 없었기 때문에 중요성을 덜 느낄 수도 있다. 문제를 방지하기 보다는 빠르게 모니터링해서 고치는게 더 맞다고 생각하기 때문일 수도 있다. 하지만 테스트코드를 짜는게 그게 다는 아니라는걸 나는 알고 있어도 팀원들을 설득시키기 위해서는 너무나 많은 노력이 필요하다. 한 번에 설득시킬 수는 절대 없고 오랜기간 아주 오랜기간 동안 내가 테스트코드 짬으로써 좋은 경험을 자연스레 심겨줘야 한다.</p>
<p>주제가 잠깐 셌는데 테스트가 중요하다고 해서 그걸 밀어붙히는건 좋지 않다. 팀원이 말해준 ROI라는건 정말 중요하기 때문이다. 지금 테스트를 작성하지 못하는 팀원들이 테스트를 짠다면 ROI는 최악일 테니 말이다. 물론 시간이 지날수록 ROI가 좋아질테고 시도조차 하지 않는다면 절대로 테스트는 작성하지 않을테니 아예 작성하지 말자는 아니다. 조금씩 유닛테스트 부터 사이트이펙트가 없는 함수들 부터 조금씩 쌓아 나가야 한다. 테스트가 중요하고 좋다는걸 자연스럽게 느끼도록 해야한다.</p>
<p>아무튼.. 이런데 요즘 고민이 많다.</p>
<p>누군가는 이렇게 말할 수 있다. FE는 요구사항도 빨리 바뀌니 테스트코드를 짜지 않는게 좋을 것 같다. 빠르게 배포할 수 있으니 테스트코드를 짜는 것 보다 에러를 모니터링하고 빠르게 버그 fix하여 배포하는게 낫다. 솔직히 이렇게 말하는 사람들의 코드가 좋은걸 본적이 없다. 요구사항이 자주 바뀌는게 아닌 유틸함수도 테스트코드를 짜지 않으며 버그가 날까봐 개발을 많이 안하려 하거나 버그 fix는 코드를 개선하고 문제를 완벽히 고치는게 아니라 땜빵코드로 메꾼다.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.07.16]]></title>
        <id>https://kooku0.github.io/journal/2023/07/16/</id>
        <link href="https://kooku0.github.io/journal/2023/07/16/"/>
        <updated>2023-07-16T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[0. 일상]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="0-일상">0. 일상<a href="https://kooku0.github.io/journal/2023/07/16/#0-%EC%9D%BC%EC%83%81" class="hash-link" aria-label="0. 일상에 대한 직접 링크" title="0. 일상에 대한 직접 링크">​</a></h2>
<p>요즘 의욕이 너무 없다. 나태해진 걸까? 백엔드 공부, 와인 앱 만들기, FE 공부 등등 주말에 진짜 아무것도 안한다. ㅠㅠ 지금까지는 나의 성장과 미래에 대한 두려움이 있어서 주말에 공부를 안하면 큰일이 나는 줄 알았다. 강박도 있어서 어딜가든 가방에 노트북을 넣어다녔다. 그런데 요즘 나의 목표가 바뀐 것 같다는 생각이 든다. 뛰어난 개발자, 나의 커리어가 목표가 된게 아니라 세상을 바꾸고 싶다. 그래서 기술공부에 흥미가 떨어진 것 같다. "타이탄의 도구들"의 영향인걸까?</p>
<p>아이템도 있고 주제도 있는데 어떻게 시작할지 모르겠다.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-당근의-방식">1. 당근의 방식<a href="https://kooku0.github.io/journal/2023/07/16/#1-%EB%8B%B9%EA%B7%BC%EC%9D%98-%EB%B0%A9%EC%8B%9D" class="hash-link" aria-label="1. 당근의 방식에 대한 직접 링크" title="1. 당근의 방식에 대한 직접 링크">​</a></h2>
<p>당근에 이제 1년정도 다니면서 당근의 방식을 나름 분석해보았다. 당근에서는 작은 실험들을 많이 한다. (토스에 비하면 적겠지만 팀의 규모나 리소스적인 측면에서 많이 한다고 생각한다.) 하지만 큰 변화를 주는 실험이나 기능들을 도입하지는 않는데 돌다리를 두드려보고 건너는 느낌이랄까? 아무래도 사용하는 유저수가 많다보니 작은 변화가 크게 받아들여 질까봐 조심히 하는 것 같다. 그래서 tf 생겼다가 없어지는 경우도 많고 신규 채용도 매우 보수적이다. it겨울도 있고해서 결과적으로 좋은 선택이였고 나도 이런 선택들이 좋아보인다. 서비스가 정체성을 잃어버리는 순간 유저들은 떠난다. 당근은 그 정체성을 잃어버리지 않기 위해 엄청 노력하고 약간은 보수적이게 된 것 같다. 그리고 새로운 기능들은 조금씩 작게 시도해보고 없애고 시도해보고 없애고 하는데 이러한 접근도 좋은 것 같다. 그래서 폭발적인 성장보다는 꾸준한 성장과 미래를 위한 토대를 탄탄하게 만드는 느낌이랄까? 처음에는 나도 별로라고 생각했는데 점점 이게 맞는 방식인 것 같다. 최근 그립랩스, 뱅크셀러드, liner 같은 서비스를 써보고 유튜브도 보고 했는데 기본에 충실하지 않은 서비스는 항상 안좋은 결과를 맞이한다고 느꼈기 때문이다.</p>
<blockquote>
<p>liner 서비스를 pro level을 무료로 1주일 써봤는데 앱에 버그가 너무 많아서 삭제했다. 기존 메모나 하이라이팅을 저버리고 chat gpt 붙히면서 이상한 기능들을 만들고 버그가 엄청 생겼는데 (chrome extension 설치하면 인터넷 속도가 엄청 느려진다.) 기본적인 본인의 서비스를 제대로 관리안하는 느낌이였다.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-시작에-대한-두려움">2. 시작에 대한 두려움<a href="https://kooku0.github.io/journal/2023/07/16/#2-%EC%8B%9C%EC%9E%91%EC%97%90-%EB%8C%80%ED%95%9C-%EB%91%90%EB%A0%A4%EC%9B%80" class="hash-link" aria-label="2. 시작에 대한 두려움에 대한 직접 링크" title="2. 시작에 대한 두려움에 대한 직접 링크">​</a></h2>
<p>혹시 다음 영상을 보지 않았다면 꼭 봤으면 좋겠다.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=dv7powwD-tQ" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=dv7powwD-tQ</a></li>
<li><a href="https://www.youtube.com/watch?v=dqQ3E1eu2gY" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=dqQ3E1eu2gY</a></li>
</ul>
<p>"타이탄의 도구들"에서 봤던 내용들이 주마등처럼 스쳐지나갔다. 내가 옳다고 생각하는 일들을 절대로 포기하지 마라. 왜 나는 시작에 대해 항상 두려워 할까? 내가 옳다고 생각하는 일에 대해 혼자하기 두려워 주변사람들을 끌어들이려고 할까? 내가 옳다고 생각하는 일에 공감은 할 뿐 아무도 해결하려 노력하지 않는다. 나는 혼자서 시작할 용기가 필요하다. 세상을 바꾸거나 미래에 영향을 미치는 일들을 할 때는 혼자서 할 용기가 필요하다. 지금 나는 그 용기가 필요한 것 같다.</p>
<p>내가 옳다고 생각하지만 주변사람들이 불가능하다고 말하는 일들을 하는데 모든 시간과 노력을 미친듯이 쏟아부어야 한다.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.07.15]]></title>
        <id>https://kooku0.github.io/journal/2023/07/15/</id>
        <link href="https://kooku0.github.io/journal/2023/07/15/"/>
        <updated>2023-07-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[오랜만에 일기를 쓴다.]]></summary>
        <content type="html"><![CDATA[<p>오랜만에 일기를 쓴다.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-vs-code-필수-단축키-파일-생성-폴더-생성-단축키">1. VS Code (필수 단축키) 파일 생성, 폴더 생성 단축키<a href="https://kooku0.github.io/journal/2023/07/15/#1-vs-code-%ED%95%84%EC%88%98-%EB%8B%A8%EC%B6%95%ED%82%A4-%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1-%ED%8F%B4%EB%8D%94-%EC%83%9D%EC%84%B1-%EB%8B%A8%EC%B6%95%ED%82%A4" class="hash-link" aria-label="1. VS Code (필수 단축키) 파일 생성, 폴더 생성 단축키에 대한 직접 링크" title="1. VS Code (필수 단축키) 파일 생성, 폴더 생성 단축키에 대한 직접 링크">​</a></h2>
<ul>
<li>cmd+shift+p &gt; Open Keyboard Shortcuts (JSON)</li>
<li>밑에 json 붙여넣기 하면 된다.</li>
</ul>
<div class="language-json codeBlockContainer_izg7 theme-code-block" style="--prism-color:#9CDCFE;--prism-background-color:#1E1E1E"><div class="codeBlockContent_moPJ"><pre tabindex="0" class="prism-code language-json codeBlock_w9zt thin-scrollbar" style="color:#9CDCFE;background-color:#1E1E1E"><code class="codeBlockLines_opl_"><span class="token-line" style="color:#9CDCFE"><span class="token plain">[</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    "key": "cmd+n",</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    "command": "explorer.newFile",</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    "when": "explorerViewletFocus"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  },</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    "key": "cmd+shift+n",</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    "command": "explorer.newFolder",</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    "when": "explorerViewletFocus"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup_UnaD"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_kuWh" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_tSTY"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_pknt"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-회사-internal-web-배포">2. 회사 internal web 배포<a href="https://kooku0.github.io/journal/2023/07/15/#2-%ED%9A%8C%EC%82%AC-internal-web-%EB%B0%B0%ED%8F%AC" class="hash-link" aria-label="2. 회사 internal web 배포에 대한 직접 링크" title="2. 회사 internal web 배포에 대한 직접 링크">​</a></h2>
<p>internal-web 배포를 드디어 했다. 배포는 했는데 아직 한 번도 사용을 해본적 없다. 과연될지.. cb 계정은 aws consolidated billing(통합결제 계정)으로 organization에서 관리하고 한 번에 결제가 가능 계정을 말한다.</p>
<p>내가 만든 기능은 github enterprise server 와 jira api server에 api를 날릴 수 있어야 하는데 가능할지 봐야한다.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="3-ghes-이관">3. GHES 이관<a href="https://kooku0.github.io/journal/2023/07/15/#3-ghes-%EC%9D%B4%EA%B4%80" class="hash-link" aria-label="3. GHES 이관에 대한 직접 링크" title="3. GHES 이관에 대한 직접 링크">​</a></h2>
<p>보안을 위해 public github에서 github enterprise server로 repo를 이관했다. 이관했을 때 actions들을 전부 사용할 수 없어서 몇 개 요청드리기는 했는데 actions 속도는 진짜 빨랐다.</p>
<p>public github의 경우 actions를 돌리고 인스턴스를 초기화하는데 설치형의 경우 한 번 install이 되면 제거되지 않기 때문에 install 시간이 거의 없다 시피하여 속도가 엄청 빨랐다. 인스턴스 스팩이 좋은 것도 있지만 설치 시간이 없는게 젤 큰 이유같다.</p>
<p>하지만 내 마음대로 actions를 추가하고 테스트할 수 없다는게 큰 단점인데 ㅠㅠ 이건 내가 public github에서 테스트하여 문제없다는게 확실하면 설치 요청드리는 방법으로 해야한다.
기존 actions중 <a href="https://github.com/preactjs/compressed-size-action" target="_blank" rel="noopener noreferrer">compressed-size-action</a>와 <a href="https://github.com/codecov/codecov-action" target="_blank" rel="noopener noreferrer">codecov</a>를 제거했다. compressed-size-action는 ci 시간이 너무 오래걸려서 효용이 없는 것 같아 제거했고 codecov는 codecov에 code read permission을 주는게 너무 크리티컬해서 제거했다. 하지만 codecov가 해주는 코드 커버리지를 pr에서 보여주는 작업은 꼭 붙히고 싶은게 괜찮은게 있을지 찾아봐야한다. 간단하게 찾아봤을 때 <a href="https://github.com/marketplace/actions/jest-coverage-report" target="_blank" rel="noopener noreferrer">jest-coverage-report</a> 괜찮은 것 같다. test result.json만 들고가는 것 같다.</p>
<p>역시 보안이 강화될 수록 개발자들은 힘들다ㅠ</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023.07.12]]></title>
        <id>https://kooku0.github.io/journal/2023/07/12/</id>
        <link href="https://kooku0.github.io/journal/2023/07/12/"/>
        <updated>2023-07-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[1. 내부 툴 개발]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="1-내부-툴-개발">1. 내부 툴 개발<a href="https://kooku0.github.io/journal/2023/07/12/#1-%EB%82%B4%EB%B6%80-%ED%88%B4-%EA%B0%9C%EB%B0%9C" class="hash-link" aria-label="1. 내부 툴 개발에 대한 직접 링크" title="1. 내부 툴 개발에 대한 직접 링크">​</a></h2>
<p>요즘 회사 내부 툴을 개발하고 있다. 누가 시켜서 한 건 아니고 일하면서 불편하고 비효율적인 부분들 자동화를 위해서 개발하고 있다. 처음에는 script cli로 개발했는데 불편한 점이 여러개였다.</p>
<ol>
<li>script 실행시킬 때 해당 프로젝트로 가서 실행시켜야 한다.</li>
<li>누가 script를 업데이트하면 다른 사람들이 모두 git pull을 받아야 한다.</li>
</ol>
<p>1번은 어찌 해결할 수 있겠지만 2번이 문제였다. 그래서 웹서버를 만들 계획을 하게 되었다. 리소스는 좀 들겠지만 cli는 관리도 힘들고 처음에는 사용해도 점점 사용을 하지 않게되는데 웹서비스는 여러 기능들을 한 곳에 모아둘 수 있고 좀 더 직관적이기 때문이다.</p>
<p>지금 테스트계정으로 인프라 셋팅을 한 상태라 도메인도 못붙히고 http로 동작하고 있는데 나중에 계정도 변경하고 인프라셋팅도 전부 업데이트할 필요가 있다. 우선 vpn으로 연결해야만 접속가능하게 보안셋팅만 했다.</p>
<p>추가로 ec2에서 git clone을 못해서(github enterprise) ecr을 이용했는데 이부분에서 진짜 많이 배웠고 재미도 있었다. github action에서 next standalone mode로 docker image build하여 ecr에 등록하고 ec2에서 iam 계정으로 ecr 로그인하여 image pull 받아 돌리도록 했는데 이런 플로우를 처음으로 셋팅해서 트러블 슈팅도 많이했고 배운것도 많았다.</p>
<p>dockerfile 관련된 내용은 정리도 해보고 싶다. 웹에서 관련 내용 찾기도 너무 어려웠다 ㅠ</p>
<p>추가로 cd 과정에서 ecr 자동업로드 까지는 했는데 ec2에서 image 받아 돌리는건 아직 수동이라 이것도 자동화하는 작업이 필요하다.</p>
<h2 class="anchor anchorWithStickyNavbar_H2Uu" id="2-회사-framework-논의">2. 회사 Framework 논의<a href="https://kooku0.github.io/journal/2023/07/12/#2-%ED%9A%8C%EC%82%AC-framework-%EB%85%BC%EC%9D%98" class="hash-link" aria-label="2. 회사 Framework 논의에 대한 직접 링크" title="2. 회사 Framework 논의에 대한 직접 링크">​</a></h2>
<p>회사 팀 내에서 Framework를 정하는 논의를 시작하기전 간단하게 정리해보았다.</p>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="1-논의-항목">1. 논의 항목<a href="https://kooku0.github.io/journal/2023/07/12/#1-%EB%85%BC%EC%9D%98-%ED%95%AD%EB%AA%A9" class="hash-link" aria-label="1. 논의 항목에 대한 직접 링크" title="1. 논의 항목에 대한 직접 링크">​</a></h3>
<ol>
<li>CSR vs JAM Stack vs SSR 선택하기</li>
<li>Framework 선택하기 (이건 거의 정해진 것 같아요)</li>
</ol>
<ul>
<li>CSR: vite</li>
<li>JAM Stack, SSR: NextJs</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_H2Uu" id="2-csr-vs-jam-stack-vs-ssr">2. CSR vs JAM Stack vs SSR<a href="https://kooku0.github.io/journal/2023/07/12/#2-csr-vs-jam-stack-vs-ssr" class="hash-link" aria-label="2. CSR vs JAM Stack vs SSR에 대한 직접 링크" title="2. CSR vs JAM Stack vs SSR에 대한 직접 링크">​</a></h3>
<ul>
<li>ReactNative는 논의에서 제외시켰어요. 현재 리소스에서는 불가능하다고 판단되어 논의 항목에 넣기에는 무리라고 생각해서에요. <a href="https://toss.im/slash-23/session-detail/A1-4" target="_blank" rel="noopener noreferrer">https://toss.im/slash-23/session-detail/A1-4</a></li>
<li>혹시 위 영상을 보지 않았다면 꼭 봤으면 좋겠어요. 지금 사용하지 않는 방법이지만 방법을 알고 있느냐 없느냐는 천지차이라 생각하기 때문이에요.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="개선점--한계점">개선점 + 한계점<a href="https://kooku0.github.io/journal/2023/07/12/#%EA%B0%9C%EC%84%A0%EC%A0%90--%ED%95%9C%EA%B3%84%EC%A0%90" class="hash-link" aria-label="개선점 + 한계점에 대한 직접 링크" title="개선점 + 한계점에 대한 직접 링크">​</a></h4>
<ul>
<li>CSR<!-- -->
<ul>
<li>현재 방식이라 따로 적지는 않을께요.</li>
</ul>
</li>
<li>JAM Stack<!-- -->
<ul>
<li>토큰을 사용하지 않는 페이지 (비회원, 이벤트)들에 대해 미리 html을 만들어둬요.</li>
<li>홈을 예시로 들면 비회원 홈에 이벤트 리스트들이 있고 이벤트 리스트들을 동적으로 관리한다고 했을 때 html을 만들때 api 찔러 이벤트 리스트를 받아와 html을 만들어두었기에 유저 입장에서 속도도 빠르고, client에서 api를 찌르지 않아도 되어요.</li>
<li>크론잡처럼 배치로 서버를 돌려 html을 만들껀데 30분 주기로 설정할 수도 있고 서버를 돌리는 api를 만들어 api를 쏘면 빌드를 하도록 할 수도 있을 것 같아요.</li>
</ul>
</li>
<li>SSR<!-- -->
<ul>
<li>모든 페이지들에 대해 html이 만들어진 후 렌더링이 될꺼라 유저 경험이 극도로 좋아져요.</li>
<li>토큰 인증 방식이 먼저 개선되어야만 모든 페이지들에 대한 ssr이 가능해요.<!-- -->
<ul>
<li>토큰 인증 방식이 개선되지 않는다면 토큰을 사용하지 않는 (비회원, 이벤트) 페이지들만 ssr이 가능해요.</li>
</ul>
</li>
<li>인증을 담당할 bff도 next server에 들어가면서 next가 엄청 많은 트래픽을 받게 될꺼에요. apiGateway보다 더 많은 트래픽을 받을꺼에요.<!-- -->
<ul>
<li>이때 운영상 리소스가 많이 발생할꺼에요.</li>
<li>문제가 발생하면 FE가 우선적으로 대응을 해야할껀데 이게 쉽지 않을 것으로 예상돼요.</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_H2Uu" id="리소스--리스크-분석">리소스 &amp; 리스크 분석<a href="https://kooku0.github.io/journal/2023/07/12/#%EB%A6%AC%EC%86%8C%EC%8A%A4--%EB%A6%AC%EC%8A%A4%ED%81%AC-%EB%B6%84%EC%84%9D" class="hash-link" aria-label="리소스 &amp; 리스크 분석에 대한 직접 링크" title="리소스 &amp; 리스크 분석에 대한 직접 링크">​</a></h4>
<h5 class="anchor anchorWithStickyNavbar_H2Uu" id="이관-리소스-분석">이관 리소스 분석<a href="https://kooku0.github.io/journal/2023/07/12/#%EC%9D%B4%EA%B4%80-%EB%A6%AC%EC%86%8C%EC%8A%A4-%EB%B6%84%EC%84%9D" class="hash-link" aria-label="이관 리소스 분석에 대한 직접 링크" title="이관 리소스 분석에 대한 직접 링크">​</a></h5>
<ul>
<li>CSR (1)<!-- -->
<ul>
<li>기존에 사용하는 방식이라서 다른 방식을 측정하기 위한 기준점으로 정해볼께요.</li>
</ul>
</li>
<li>JAM Stack (3)<!-- -->
<ul>
<li>Framework(NextJs)를 새로 도입하고 이관하는 과정이 필요해요.</li>
<li>S3 + Cloudfront + Lambda(or EC2 or ECS) 인프라 셋팅과 구성이 필요해요.</li>
<li>(ECS로 돌린다고 했을 때 서버 관리를 위한 모니터링 툴(ArgoCD , Grafana)도 필요해요.)<!-- -->
<ul>
<li>최대한 리소스 안드는 lambda or ec2가 좋을 것 같아요.</li>
<li>서버쪽 인프라 구성과 동일하게 하려면 ecs로 해야겠지만..</li>
</ul>
</li>
</ul>
</li>
<li>SSR (8)<!-- -->
<ul>
<li>Framework(NextJs)를 새로 도입하고 이관하는 과정이 필요해요.</li>
<li>S3 + Cloudfront + ECS 인프라 셋팅과 구성이 필요해요.</li>
<li>서버 관리를 위한 모니터링 툴(ArgoCD, Grafana) 셋팅이 필요해요.</li>
<li>로그를 쌓고 보기 위한 elastic logstash 셋팅이 필요해요.<!-- -->
<ul>
<li>서버쪽과 동일한 구성으로 진행될 것 같아요.</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 class="anchor anchorWithStickyNavbar_H2Uu" id="운영-리스크">운영 리스크<a href="https://kooku0.github.io/journal/2023/07/12/#%EC%9A%B4%EC%98%81-%EB%A6%AC%EC%8A%A4%ED%81%AC" class="hash-link" aria-label="운영 리스크에 대한 직접 링크" title="운영 리스크에 대한 직접 링크">​</a></h5>
<ul>
<li>CSR (0)<!-- -->
<ul>
<li>AWS에 장애가 있지 않는 이상 없어요.</li>
<li>정적인 리소스들이라 운영이 필요하지 않아요.</li>
</ul>
</li>
<li>JAM Stack (3)<!-- -->
<ul>
<li>일정 주기마다 실행될 서버자원에 대한 모니터링이 필요해요. (아마 slack 알림정도)</li>
<li>서버가 실행되지 않았거나 api를 쏘고 제대로 markup이 되지 못한 경우에 대한 작업이 필요해요.<!-- -->
<ul>
<li>서버 자원이 죽더라도 유저에게 직접적인 문제가 발생하지는 않기에 리스크는 매우 적어요.</li>
</ul>
</li>
</ul>
</li>
<li>SSR (10)<!-- -->
<ul>
<li>실시간 모니터링이 필요해요.</li>
<li>인프라팀이 도와주시겠지만 FE 자원이 지금보다 훨씬 많이 들 것 같아요.</li>
<li>서버 배포에 문제가 생길 경우, 서버 운영에 문제가 생길 경우 slack과 연동시키고 온콜이 필수적으로 필요할 것 같아요.</li>
</ul>
</li>
</ul>]]></content>
    </entry>
</feed>